!function(){"use strict";var e=document.querySelector(".profile__edit-btn"),t=document.querySelector(".profile__add-btn"),n=document.querySelector(".profile__name"),r=document.querySelector(".profile__job"),o=document.querySelector(".profile__avatar"),i=document.querySelector('[data-form="popup__form_add"]'),c=document.querySelector('[data-form="popup__form_edit"]'),a=document.querySelector('[data-form="popup__form_edit-avatar"]'),u=document.querySelector('[data-image="popup__view_image"]'),s=document.querySelector('[data-form="popup__form_delete"]'),l=i.querySelector("form"),f=c.querySelector("form"),p=a.querySelector("form"),h=document.querySelector(".popup__input_type_name"),d=document.querySelector(".popup__input_type_job"),y=(document.querySelector(".popup__input_type_link"),document.querySelector(".cards")),v=document.querySelector("#card-template").content,m={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__btn",inactiveButtonClass:"popup__btn_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},_=function(e,t){var n=e.querySelector(".popup__btn_type_save");n.innerHTML=t?n.getAttribute("data-text-saving"):n.getAttribute("data-text-original")};function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var k=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.url=t,this.options=n,this.groupId="group-12"}var t,n;return t=e,(n=[{key:"getUserData",value:function(){return fetch("".concat(this.url).concat(this.groupId,"/users/me"),this.options).then((function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}))}},{key:"getInitialCards",value:function(){return fetch("".concat(this.url,"/").concat(this.groupId,"/cards"),this.options).then((function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}))}},{key:"updateUser",value:function(e){return fetch("".concat(this.url,"/").concat(this.groupId,"/users/me"),{method:"PATCH",headers:this.options.headers,body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}))}},{key:"addCard",value:function(e){return fetch("".concat(this.url,"/").concat(this.groupId,"/cards"),{method:"POST",headers:this.options.headers,body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this.url,"/").concat(this.groupId,"/cards/").concat(e),{method:"DELETE",headers:this.options.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}))}},{key:"addLike",value:function(e){return fetch("".concat(this.url,"/").concat(this.groupId,"/cards/likes/").concat(e),{method:"PUT",headers:this.options.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}))}},{key:"removeLike",value:function(e){return fetch("".concat(this.url,"/").concat(this.groupId,"/cards/likes/").concat(e),{method:"DELETE",headers:this.options.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}))}},{key:"changeProfilePic",value:function(e){return fetch("".concat(this.url,"/").concat(this.groupId,"/users/me/avatar"),{method:"PATCH",headers:this.options.headers,body:JSON.stringify({avatar:e.avatar})}).then((function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}))}}])&&b(t.prototype,n),e}();function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var E=function(){function e(t,n,r){var o=t.name,i=t.link,c=t._id,a=t.likes,u=t.owner,s=t.handleCardClickCallbackFn,l=t.handleTrashClickCallbackFn,f=t.handleLikeClickCallbackFn;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.cardName=o,this.cardLink=i,this.cardId=c,this.cardOwnerId=u._id,this.cardLikes=a,this.userId=n,this.handleCardClick=s,this.handleTrashClick=l,this.handleLikeClick=f,this.cardTemplate=r,this.element=this._getTemplate(),this.cardPic=this.element.querySelector(".card__pic")}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return this.cardTemplate.querySelector(".card").cloneNode(!0)}},{key:"_fillHeart",value:function(e){e.target.classList.toggle("card__like_active")}},{key:"_plusLike",value:function(e,t){t.target.closest(".card").querySelector(".card__like-total").textContent=e.likes.length}},{key:"_minusLike",value:function(e,t){t.target.closest(".card").querySelector(".card__like-total").textContent=e.likes.length}},{key:"addLikes",value:function(e,t){this._fillHeart(t),this._plusLike(e,t)}},{key:"removeLikes",value:function(e,t){this._fillHeart(t),this._minusLike(e,t)}},{key:"_showUserFilledHeart",value:function(){var e=this;this.cardLikes.forEach((function(t){t._id===e.userId&&e.element.querySelector(".card__like-btn").classList.toggle("card__like_active")}))}},{key:"_showTrash",value:function(){this.element.querySelector(".card__delete").style.display="none"}},{key:"_setEventListeners",value:function(){var e=this;this.element.querySelector(".card__like-btn").addEventListener("click",this.handleLikeClick),this.element.querySelector(".card__delete").addEventListener("click",(function(t){t.preventDefault,e.handleTrashClick(e.cardId)})),this.cardPic.addEventListener("click",this.handleCardClick)}},{key:"generateCard",value:function(){return this.cardPic.src=this.cardLink,this.element.querySelector(".card__title").textContent=this.cardName,this.cardPic.alt=this.cardName,this.element.querySelector(".card__like-total").textContent=Object.keys(this.cardLikes).length,this.element.id=this.cardId,this.cardLikes.length>0&&this._showUserFilledHeart(),this.cardOwnerId!==this.userId&&this._showTrash(),this._setEventListeners(),this.element}}])&&g(t.prototype,n),e}();function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.formSelector=t.formSelector,this.inputSelector=t.inputSelector,this.submitButtonSelector=t.submitButtonSelector,this.inactiveButtonClass=t.inactiveButtonClass,this.inputErrorClass=t.inputErrorClass,this.errorClass=t.errorClass,this.formElement=n,this.inputList=Array.from(this.formElement.querySelectorAll(this.inputSelector)),this.buttonElement=this.formElement.querySelector(this.submitButtonSelector)}var t,n;return t=e,(n=[{key:"resetErrorMessage",value:function(e){var t=this;if(e){var n=e.querySelectorAll(".".concat(this.errorClass)),r=e.querySelectorAll(".".concat(this.inputErrorClass));e.reset(),n.length>0&&n.forEach((function(e){e.classList.remove(t.errorClass)})),r.length>0&&r.forEach((function(e){e.classList.remove(t.inputErrorClass)}))}}},{key:"_showInputError",value:function(e,t){var n=this.formElement.querySelector(".".concat(e.id,"-error"));n&&(e.classList.add(this.inputErrorClass),n.classList.add(this.errorClass),n.textContent=t)}},{key:"_hideInputError",value:function(e){var t=this.formElement.querySelector(".".concat(e.id,"-error"));t&&(e.classList.remove(this.inputErrorClass),t.classList.remove(this.errorClass),t.textContent="")}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleBtnState",value:function(){this._hasInvalidInput(this.inputList)?(this.buttonElement.classList.add(this.inactiveButtonClass),this.buttonElement.setAttribute("disabled",!0)):(this.buttonElement.classList.remove(this.inactiveButtonClass),this.buttonElement.removeAttribute("disabled"))}},{key:"_setEvenListeners",value:function(){var e=this;this.inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleBtnState()}))})),this.formElement.addEventListener("submit",(function(e){e.preventDefault()}))}},{key:"enableValidation",value:function(){this._setEvenListeners(),this._toggleBtnState()}}])&&C(t.prototype,n),e}();function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var I=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=n}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.length>1?this._items.forEach((function(t){e._renderer(t)})):this._renderer(this._items)}},{key:"addInitialItem",value:function(e){this._container.append(e)}},{key:"addNewItem",value:function(e){this._container.prepend(e)}}])&&w(t.prototype,n),e}();function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=t,this.job=n,this.avatar=r,this.userId=""}var t,n;return t=e,(n=[{key:"setUserInfo",value:function(e){this.name.textContent=e.name,this.job.textContent=e.about}},{key:"setPopupInput",value:function(e,t){e.value=this.name.textContent,t.value=this.job.textContent}},{key:"setAvatar",value:function(e){this.avatar.style.backgroundImage="url(".concat(e.avatar,")")}},{key:"setUserId",value:function(e){this.userId=e._id}},{key:"getUserId",value:function(){return this.userId}}])&&O(t.prototype,n),e}();function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){e.target.classList.contains("popup_opened")&&o.close()},(n="_closeOnOverlay")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popupElement=t,this._handleEscClose=this._handleEscClose.bind(this),this.close=this.close.bind(this),this.closeBtnElement=t.querySelector(".popup__btn_type_close")}var t,n;return t=e,(n=[{key:"setEventlisteners",value:function(){this._popupElement.addEventListener("click",this._closeOnOverlay),this.closeBtnElement.addEventListener("click",this.close)}},{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}}])&&j(t.prototype,n),e}();function q(e){return(q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function R(e,t,n){return(R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=U(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function B(e,t){return(B=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function x(e,t){return!t||"object"!==q(t)&&"function"!=typeof t?A(e):t}function A(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function U(e){return(U=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var D=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&B(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=U(r);if(o){var n=U(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return x(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e)).popupElement=e,n.handleFormSubmit=t.bind(A(n)),n}return t=c,(n=[{key:"_getInputValues",value:function(){var e={};return Array.from(this.popupElement.querySelectorAll(".popup__input")).forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventlisteners",value:function(){var e=this;R(U(c.prototype),"setEventlisteners",this).call(this),this.popupElement.querySelector("form").addEventListener("submit",(function(t){t.preventDefault(),e.handleFormSubmit(e._getInputValues())}))}}])&&T(t.prototype,n),c}(P);function F(e){return(F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function H(e,t,n){return(H="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=J(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function V(e,t){return(V=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function M(e,t){return!t||"object"!==F(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function J(e){return(J=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var z=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&V(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=J(r);if(o){var n=J(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return M(this,e)});function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e)).popupElement=e,t.popupImg=e.querySelector(".popup__img"),t.popupImgCaption=e.querySelector(".popup__img-caption"),t}return t=c,(n=[{key:"open",value:function(e){var t="".concat(e.target.parentElement.querySelector(".card__title").textContent);this.popupImg.src="",this.popupImg.src=e.target.src,this.popupImgCaption.textContent=t,this.popupImg.alt=t,H(J(c.prototype),"open",this).call(this)}}])&&N(t.prototype,n),c}(P);function G(e){return(G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function K(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Q(e,t,n){return(Q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=Y(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function W(e,t){return(W=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function X(e,t){return!t||"object"!==G(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Y(e){return(Y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Z=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&W(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Y(r);if(o){var n=Y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return X(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e)).popupElement=e,n.handleDelete=t,n.cardId="",n}return t=c,(n=[{key:"open",value:function(e){Q(Y(c.prototype),"open",this).call(this),this.cardId=e,this.setEventlisteners()}},{key:"setEventlisteners",value:function(){var e=this;this.popupElement.querySelector("form").addEventListener("submit",(function(t){t.preventDefault(),e.handleDelete()}))}}])&&K(t.prototype,n),c}(P),$=new k("https://around.nomoreparties.co/v1/",{method:"GET",headers:{authorization:"e09604a5-57aa-4b20-9a83-ea66e5c6924b","Content-Type":"application/json"}}),ee=new z(u),te=new L(n,r,o),ne=function(e){ee.open(e)},re=function(e){pe.open(e)},oe=function(e){var t=e.name,n=e.link,r=e._id,o=e.likes,i=e.owner,c=te.getUserId(),a=new E({name:t,link:n,_id:r,likes:o,owner:i,handleCardClickCallbackFn:ne,handleTrashClickCallbackFn:re,handleLikeClickCallbackFn:function(e){var t=e.target.closest(".card").id;e.target.classList.contains("card__like_active")?$.removeLike(t).then((function(t){a.removeLikes(t,e)})).catch((function(e){console.log("Error: ".concat(e))})):$.addLike(t).then((function(t){a.addLikes(t,e)})).catch((function(e){console.log("Error: ".concat(e))}))}},c,v);return a.generateCard()},ie=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=new I({items:e,renderer:function(e){var r=oe(e);t?n.addNewItem(r):n.addInitialItem(r)}},y);return n},ce=new S(m,c),ae=new S(m,i),ue=new S(m,a);ce.enableValidation(),ae.enableValidation(),ue.enableValidation();var se=new D(c,(function(e){_(c,!0),$.updateUser(e).then((function(e){te.setUserInfo(e),_(c,!1),se.close()})).catch((function(e){console.log("Error: ".concat(e))}))})),le=new D(i,(function(e){_(i,!0),$.addCard(e).then((function(e){ie(e).renderItems(),le.close(),_(i,!1)})).catch((function(e){console.log("Error: ".concat(e))}))})),fe=new D(a,(function(e){_(a,!0),$.changeProfilePic(e).then((function(e){o.style.backgroundImage="url(".concat(e.avatar,")"),fe.close(),_(a,!1)})).catch((function(e){console.log("Error: ".concat(e))}))})),pe=new Z(s,(function(){var e=pe.cardId;$.deleteCard(e).then((function(){document.getElementById("".concat(pe.cardId)).remove(),pe.close()})).catch((function(e){console.log("Error: ".concat(e))}))}));se.setEventlisteners(),le.setEventlisteners(),fe.setEventlisteners(),pe.setEventlisteners(),e.addEventListener("click",(function(){ce.resetErrorMessage(f),te.setPopupInput(h,d),se.open()})),t.addEventListener("click",(function(){ae.resetErrorMessage(l),le.open()})),o.addEventListener("click",(function(){ae.resetErrorMessage(p),fe.open()})),Promise.all([$.getInitialCards(),$.getUserData()]).then((function(e){return function(e){te.setUserInfo(e),te.setAvatar(e),te.setUserId(e)}(e[1]),e})).catch((function(e){return"Error: ".concat(e)})).then((function(e){var t;t=e[0],ie(t,!1).renderItems()})).catch((function(e){return"Error: ".concat(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,