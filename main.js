!function(){"use strict";var e=document.querySelector(".profile__edit-btn"),t=document.querySelector(".profile__add-btn"),n=document.querySelector(".profile__name"),r=document.querySelector(".profile__job"),o=document.querySelector(".profile__avatar"),i=document.querySelector('[data-form="popup__form_add"]'),c=document.querySelector('[data-form="popup__form_edit"]'),a=document.querySelector('[data-form="popup__form_edit-avatar"]'),s=document.querySelector('[data-image="popup__view_image"]'),u=document.querySelector('[data-form="popup__form_delete"]'),l=i.querySelector("form"),f=c.querySelector("form"),p=a.querySelector("form"),h=document.querySelector(".popup__input_type_name"),d=document.querySelector(".popup__input_type_job"),y=(document.querySelector(".popup__input_type_link"),document.querySelector(".cards")),v=document.querySelector("#card-template").content,m={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__btn",inactiveButtonClass:"popup__btn_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},_=function(e,t){var n=e.querySelector(".popup__btn_type_save");n.innerHTML=t?n.getAttribute("data-text-saving"):n.getAttribute("data-text-original")};function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var k=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.url=t,this.options=n,this.groupId="group-12"}var t,n;return t=e,(n=[{key:"getUserData",value:function(){return fetch("".concat(this.url).concat(this.groupId,"/users/me"),this.options).then((function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}))}},{key:"getInitialCards",value:function(){return fetch("".concat(this.url,"/").concat(this.groupId,"/cards"),this.options).then((function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}))}},{key:"updateUser",value:function(e){return fetch("".concat(this.url,"/").concat(this.groupId,"/users/me"),{method:"PATCH",headers:this.options.headers,body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}))}},{key:"addCard",value:function(e){return fetch("".concat(this.url,"/").concat(this.groupId,"/cards"),{method:"POST",headers:this.options.headers,body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this.url,"/").concat(this.groupId,"/cards/").concat(e),{method:"DELETE",headers:this.options.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}))}},{key:"addLike",value:function(e){return fetch("".concat(this.url,"/").concat(this.groupId,"/cards/likes/").concat(e),{method:"PUT",headers:this.options.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}))}},{key:"removeLike",value:function(e){return fetch("".concat(this.url,"/").concat(this.groupId,"/cards/likes/").concat(e),{method:"DELETE",headers:this.options.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}))}},{key:"changeProfilePic",value:function(e){return fetch("".concat(this.url,"/").concat(this.groupId,"/users/me/avatar"),{method:"PATCH",headers:this.options.headers,body:JSON.stringify({avatar:e.avatar})}).then((function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}))}}])&&b(t.prototype,n),e}();function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var E=function(){function e(t,n,r){var o=t.name,i=t.link,c=t._id,a=t.likes,s=t.owner,u=t.handleCardClickCallbackFn,l=t.handleTrashClickCallbackFn,f=t.handleLikeClickCallbackFn;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.cardName=o,this.cardLink=i,this.cardId=c,this.cardOwnerId=s._id,this.cardLikes=a,this.userId=n,this.handleCardClick=u,this.handleTrashClick=l,this.handleLikeClick=f,this.cardTemplate=r,this.element=this._getTemplate(),this.cardPic=this.element.querySelector(".card__pic")}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return this.cardTemplate.querySelector(".card").cloneNode(!0)}},{key:"_fillHeart",value:function(e){e.target.classList.toggle("card__like_active")}},{key:"_plusLike",value:function(e,t){t.target.closest(".card").querySelector(".card__like-total").textContent=e.likes.length}},{key:"_minusLike",value:function(e,t){t.target.closest(".card").querySelector(".card__like-total").textContent=e.likes.length}},{key:"addLikes",value:function(e,t){this._fillHeart(t),this._plusLike(e,t)}},{key:"removeLikes",value:function(e,t){this._fillHeart(t),this._minusLike(e,t)}},{key:"_showUserFilledHeart",value:function(){var e=this;this.cardLikes.forEach((function(t){t._id===e.userId&&e.element.querySelector(".card__like-btn").classList.toggle("card__like_active")}))}},{key:"_showTrash",value:function(){this.element.querySelector(".card__delete").style.display="none"}},{key:"_setEventListeners",value:function(){var e=this;this.element.querySelector(".card__like-btn").addEventListener("click",this.handleLikeClick),this.element.querySelector(".card__delete").addEventListener("click",(function(t){t.preventDefault,e.handleTrashClick(e.cardId)})),this.cardPic.addEventListener("click",this.handleCardClick)}},{key:"generateCard",value:function(){return this.cardPic.src=this.cardLink,this.element.querySelector(".card__title").textContent=this.cardName,this.cardPic.alt=this.cardName,this.element.querySelector(".card__like-total").textContent=Object.keys(this.cardLikes).length,this.element.id=this.cardId,this.cardLikes.length>0&&this._showUserFilledHeart(),this.cardOwnerId!==this.userId&&this._showTrash(),this._setEventListeners(),this.element}}])&&g(t.prototype,n),e}();function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.formSelector=t.formSelector,this.inputSelector=t.inputSelector,this.submitButtonSelector=t.submitButtonSelector,this.inactiveButtonClass=t.inactiveButtonClass,this.inputErrorClass=t.inputErrorClass,this.errorClass=t.errorClass,this.formElement=n,this.inputList=Array.from(this.formElement.querySelectorAll(this.inputSelector)),this.buttonElement=this.formElement.querySelector(this.submitButtonSelector)}var t,n;return t=e,(n=[{key:"resetErrorMessage",value:function(e){var t=this;if(e){var n=e.querySelectorAll(".".concat(this.errorClass)),r=e.querySelectorAll(".".concat(this.inputErrorClass));e.reset(),n.length>0&&n.forEach((function(e){e.classList.remove(t.errorClass)})),r.length>0&&r.forEach((function(e){e.classList.remove(t.inputErrorClass)}))}this._toggleBtnState()}},{key:"_showInputError",value:function(e,t){var n=this.formElement.querySelector(".".concat(e.id,"-error"));n&&(e.classList.add(this.inputErrorClass),n.classList.add(this.errorClass),n.textContent=t)}},{key:"_hideInputError",value:function(e){var t=this.formElement.querySelector(".".concat(e.id,"-error"));t&&(e.classList.remove(this.inputErrorClass),t.classList.remove(this.errorClass),t.textContent="")}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleBtnState",value:function(){this._hasInvalidInput(this.inputList)?(this.buttonElement.classList.add(this.inactiveButtonClass),this.buttonElement.disabled=!0):(this.buttonElement.classList.remove(this.inactiveButtonClass),this.buttonElement.disabled=!1)}},{key:"_setEvenListeners",value:function(){var e=this;this.inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleBtnState()}))})),this.formElement.addEventListener("submit",(function(e){e.preventDefault()}))}},{key:"enableValidation",value:function(){this._toggleBtnState(),this._setEvenListeners()}}])&&S(t.prototype,n),e}();function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var I=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=n}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.length>1?this._items.forEach((function(t){e._renderer(t)})):this._renderer(this._items)}},{key:"addInitialItem",value:function(e){this._container.append(e)}},{key:"addNewItem",value:function(e){this._container.prepend(e)}}])&&w(t.prototype,n),e}();function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=t,this.job=n,this.avatar=r,this.userId=""}var t,n;return t=e,(n=[{key:"setUserInfo",value:function(e){this.name.textContent=e.name,this.job.textContent=e.about}},{key:"setPopupInput",value:function(e,t){e.value=this.name.textContent,t.value=this.job.textContent}},{key:"setAvatar",value:function(e){this.avatar.style.backgroundImage="url(".concat(e.avatar,")")}},{key:"setUserId",value:function(e){this.userId=e._id}},{key:"getUserId",value:function(){return this.userId}}])&&O(t.prototype,n),e}();function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){e.target.classList.contains("popup_opened")&&o.close()},(n="_closeOnOverlay")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popupElement=t,this._handleEscClose=this._handleEscClose.bind(this),this.close=this.close.bind(this),this.closeBtnElement=t.querySelector(".popup__btn_type_close")}var t,n;return t=e,(n=[{key:"setEventlisteners",value:function(){this._popupElement.addEventListener("click",this._closeOnOverlay),this.closeBtnElement.addEventListener("click",this.close)}},{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}}])&&j(t.prototype,n),e}();function q(e){return(q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function R(e,t,n){return(R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=D(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function B(e,t){return(B=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function x(e,t){return!t||"object"!==q(t)&&"function"!=typeof t?U(e):t}function U(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function D(e){return(D=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&B(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=D(r);if(o){var n=D(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return x(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e)).popupElement=e,n.handleFormSubmit=t.bind(U(n)),n}return t=c,(n=[{key:"_getInputValues",value:function(){var e={};return Array.from(this.popupElement.querySelectorAll(".popup__input")).forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventlisteners",value:function(){var e=this;R(D(c.prototype),"setEventlisteners",this).call(this),this.popupElement.querySelector("form").addEventListener("submit",(function(t){t.preventDefault(),e.handleFormSubmit(e._getInputValues())}))}}])&&T(t.prototype,n),c}(P);function F(e){return(F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function H(e,t,n){return(H="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=J(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function V(e,t){return(V=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function M(e,t){return!t||"object"!==F(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function J(e){return(J=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var z=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&V(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=J(r);if(o){var n=J(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return M(this,e)});function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e)).popupElement=e,t.popupImg=e.querySelector(".popup__img"),t.popupImgCaption=e.querySelector(".popup__img-caption"),t}return t=c,(n=[{key:"open",value:function(e){H(J(c.prototype),"setEventlisteners",this).call(this);var t="".concat(e.target.parentElement.querySelector(".card__title").textContent);this.popupImg.src="",this.popupImg.src=e.target.src,this.popupImgCaption.textContent=t,this.popupImg.alt=t,H(J(c.prototype),"open",this).call(this)}}])&&N(t.prototype,n),c}(P);function G(e){return(G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function K(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Q(e,t,n){return(Q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=Y(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function W(e,t){return(W=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function X(e,t){return!t||"object"!==G(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Y(e){return(Y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Z=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&W(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Y(r);if(o){var n=Y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return X(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e)).popupElement=e,n.handleDelete=t,n.cardId="",n}return t=c,(n=[{key:"open",value:function(e){Q(Y(c.prototype),"open",this).call(this),this.cardId=e,this.setEventlisteners()}},{key:"setEventlisteners",value:function(){var e=this;this.popupElement.querySelector("form").addEventListener("submit",(function(t){t.preventDefault(),e.handleDelete()}))}}])&&K(t.prototype,n),c}(P),$=new k("https://around.nomoreparties.co/v1/",{method:"GET",headers:{authorization:"e09604a5-57aa-4b20-9a83-ea66e5c6924b","Content-Type":"application/json"}}),ee=new z(s),te=new L(n,r,o),ne=function(e){ee.open(e)},re=function(e){pe.open(e)},oe=function(e){var t=e.name,n=e.link,r=e._id,o=e.likes,i=e.owner,c=te.getUserId(),a=new E({name:t,link:n,_id:r,likes:o,owner:i,handleCardClickCallbackFn:ne,handleTrashClickCallbackFn:re,handleLikeClickCallbackFn:function(e){var t=e.target.closest(".card").id;e.target.classList.contains("card__like_active")?$.removeLike(t).then((function(t){a.removeLikes(t,e)})).catch((function(e){console.log("Error: ".concat(e))})):$.addLike(t).then((function(t){a.addLikes(t,e)})).catch((function(e){console.log("Error: ".concat(e))}))}},c,v);return a.generateCard()},ie=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=new I({items:e,renderer:function(e){var r=oe(e);t?n.addNewItem(r):n.addInitialItem(r)}},y);return n},ce=new C(m,c),ae=new C(m,i),se=new C(m,a);ce.enableValidation(),ae.enableValidation(),se.enableValidation();var ue=new A(c,(function(e){_(c,!0),$.updateUser(e).then((function(e){te.setUserInfo(e),ue.close()})).catch((function(e){console.log("Error: ".concat(e))})).then((function(){_(c,!1)}))})),le=new A(i,(function(e){_(i,!0),$.addCard(e).then((function(e){ie(e).renderItems(),le.close()})).catch((function(e){console.log("Error: ".concat(e))})).then((function(){_(i,!1)}))})),fe=new A(a,(function(e){_(a,!0),$.changeProfilePic(e).then((function(e){o.style.backgroundImage="url(".concat(e.avatar.toString(),")"),fe.close()})).catch((function(e){console.log("Error: ".concat(e))})).then((function(){_(a,!1)}))})),pe=new Z(u,(function(){var e=pe.cardId;$.deleteCard(e).then((function(){document.getElementById("".concat(pe.cardId)).remove(),pe.close()})).catch((function(e){console.log("Error: ".concat(e))}))}));ue.setEventlisteners(),le.setEventlisteners(),fe.setEventlisteners(),pe.setEventlisteners(),e.addEventListener("click",(function(){ce.resetErrorMessage(f),te.setPopupInput(h,d),ue.open()})),t.addEventListener("click",(function(){ae.resetErrorMessage(l),le.open()})),o.addEventListener("click",(function(){se.resetErrorMessage(p),fe.open()})),Promise.all([$.getInitialCards(),$.getUserData()]).then((function(e){return function(e){te.setUserInfo(e),te.setAvatar(e),te.setUserId(e)}(e[1]),e})).catch((function(e){return"Error: ".concat(e)})).then((function(e){var t;t=e[0],ie(t,!1).renderItems()})).catch((function(e){return"Error: ".concat(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJfcHJvamVjdC8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3QvLi9zcmMvdXRpbHMvdmFsaWRhdGUtc2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3QvLi9zcmMvdXRpbHMvbG9hZGluZy5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhEZWxldGUuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3QvLi9zcmMvcGFnZXMvaW5kZXguanMiXSwibmFtZXMiOlsiZWRpdFByb2ZpbGVCdG5FbGVtZW50IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYWRkQ2FyZEJ0bkVsZW1lbnQiLCJwcm9maWxlVGl0bGVFbGVtZW50IiwicHJvZmlsZVN1YnRpdGxlRWxlbWVudCIsInByb2ZpbGVBdmF0YXJFbGVtZW50IiwicG9wdXBGb3JtQWRkRWxlbWVudCIsInBvcHVwRm9ybUVkaXRFbGVtZW50IiwicG9wdXBGb3JtQ2hhbmdlQXZhdGFyRWxlbWVudCIsInBvcHVwVmlld0ltYWdlRWxlbWVudCIsInBvcHVwRGVsZXRlQ2FyZEVsZW1lbnQiLCJmb3JtQWRkRWxlbWVudCIsImZvcm1FZGl0RWxlbWVudCIsImZvcm1DaGFuZ2VBdmF0YXJFbGVtZW50IiwicG9wdXBJbnB1dFR5cGVOYW1lIiwicG9wdXBJbnB1dFR5cGVKb2IiLCJjYXJkc0NvbnRhaW5lckVsZW1lbnQiLCJjYXJkVGVtcGxhdGUiLCJjb250ZW50IiwidmFsaWRhdGlvbkNvbmZpZyIsImZvcm1TZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwibG9hZGluZ1RleHQiLCJwb3B1cEVsZW1lbnQiLCJpc1NhdmluZyIsImVsZW1lbnQiLCJpbm5lckhUTUwiLCJnZXRBdHRyaWJ1dGUiLCJBcGkiLCJ1cmxUb1JlcXVlc3RlZFJlc291cmNlIiwib3B0aW9uc09iaiIsInRoaXMiLCJ1cmwiLCJvcHRpb25zIiwiZ3JvdXBJZCIsImZldGNoIiwidGhlbiIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJ1c2VyRGF0YSIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm5hbWUiLCJhYm91dCIsImNhcmREYXRhIiwibGluayIsImNhcmRJZCIsImF2YXRhckxpbmsiLCJhdmF0YXIiLCJDYXJkIiwidXNlcklkIiwiX2lkIiwibGlrZXMiLCJvd25lciIsImhhbmRsZUNhcmRDbGlja0NhbGxiYWNrRm4iLCJoYW5kbGVUcmFzaENsaWNrQ2FsbGJhY2tGbiIsImhhbmRsZUxpa2VDbGlja0NhbGxiYWNrRm4iLCJjYXJkTmFtZSIsImNhcmRMaW5rIiwiY2FyZE93bmVySWQiLCJjYXJkTGlrZXMiLCJoYW5kbGVDYXJkQ2xpY2siLCJoYW5kbGVUcmFzaENsaWNrIiwiaGFuZGxlTGlrZUNsaWNrIiwiX2dldFRlbXBsYXRlIiwiY2FyZFBpYyIsImNsb25lTm9kZSIsImV2ZW50IiwidGFyZ2V0IiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiY2xvc2VzdCIsInRleHRDb250ZW50IiwibGVuZ3RoIiwiX2ZpbGxIZWFydCIsIl9wbHVzTGlrZSIsIl9taW51c0xpa2UiLCJmb3JFYWNoIiwibGlrZSIsInN0eWxlIiwiZGlzcGxheSIsImFkZEV2ZW50TGlzdGVuZXIiLCJwcmV2ZW50RGVmYXVsdCIsInNyYyIsImFsdCIsIk9iamVjdCIsImtleXMiLCJpZCIsIl9zaG93VXNlckZpbGxlZEhlYXJ0IiwiX3Nob3dUcmFzaCIsIl9zZXRFdmVudExpc3RlbmVycyIsIkZvcm1WYWxpZGF0b3IiLCJzZXR0aW5nT2JqIiwiZm9ybUVsZW1lbnQiLCJpbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiYnV0dG9uRWxlbWVudCIsImVycm9yRWxlbWVudExpc3QiLCJpbnB1dEVycm9yRWxlbWVudExpc3QiLCJyZXNldCIsImVycm9yIiwicmVtb3ZlIiwiaW5wdXRFcnJvciIsIl90b2dnbGVCdG5TdGF0ZSIsImlucHV0RWxlbWVudCIsImVycm9yTWVzc2FnZSIsImVycm9yRWxlbWVudCIsImFkZCIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInNvbWUiLCJfaGFzSW52YWxpZElucHV0IiwiZGlzYWJsZWQiLCJfdGhpcyIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJlIiwiX3NldEV2ZW5MaXN0ZW5lcnMiLCJTZWN0aW9uIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsIml0ZW0iLCJhcHBlbmQiLCJwcmVwZW5kIiwiVXNlckluZm8iLCJqb2IiLCJpbnB1dE5hbWVFbGVtZW50IiwiaW5wdXRKb2JFbGVtZW50IiwidmFsdWUiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJQb3B1cCIsImNvbnRhaW5zIiwiY2xvc2UiLCJfcG9wdXBFbGVtZW50IiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsImNsb3NlQnRuRWxlbWVudCIsIl9jbG9zZU9uT3ZlcmxheSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJrZXkiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdENhbGxiYWNrRm4iLCJoYW5kbGVGb3JtU3VibWl0IiwidXNlckluZm8iLCJfZ2V0SW5wdXRWYWx1ZXMiLCJQb3B1cFdpdGhJbWFnZSIsInBvcHVwSW1nIiwicG9wdXBJbWdDYXB0aW9uIiwiY2FyZFRleHQiLCJwYXJlbnRFbGVtZW50IiwiUG9wdXBXaXRoRGVsZXRlIiwiaGFuZGxlRGVsZXRlQ2FsbGJhY2tGbiIsImhhbmRsZURlbGV0ZSIsInNldEV2ZW50bGlzdGVuZXJzIiwiYXBpIiwiQVBJIiwiYXV0aG9yaXphdGlvbiIsInBvcHVwV2l0aEltYWdlIiwib3BlbiIsInBvcHVwV2l0aERlbGV0ZSIsImNyZWF0ZUNhcmQiLCJnZXRVc2VySWQiLCJjYXJkRWxlbWVudCIsInJlbW92ZUxpa2UiLCJyZW1vdmVMaWtlcyIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImFkZExpa2UiLCJhZGRMaWtlcyIsImdlbmVyYXRlQ2FyZCIsImNyZWF0ZVNlY3Rpb24iLCJzZWN0aW9uIiwiY2FyZCIsImFkZE5ld0l0ZW0iLCJhZGRJbml0aWFsSXRlbSIsImZvcm1FZGl0VmFsaWRhdG9yIiwiZm9ybUFkZFZhbGlkYXRvciIsImZvcm1DaGFuZ2VBdmF0YXIiLCJlbmFibGVWYWxpZGF0aW9uIiwicG9wdXBFZGl0UHJvZmlsZSIsIm5ld1VzZXJEYXRhIiwidXBkYXRlVXNlciIsInJlc3VsdCIsInNldFVzZXJJbmZvIiwicG9wdXBBZGRDYXJkIiwiYWRkQ2FyZCIsInJlbmRlckl0ZW1zIiwicG9wdXBDaGFuZ2VBdmF0YXIiLCJuZXdBdmF0YXJPYmoiLCJjaGFuZ2VQcm9maWxlUGljIiwidG9TdHJpbmciLCJkZWxldGVDYXJkIiwiZ2V0RWxlbWVudEJ5SWQiLCJyZXNldEVycm9yTWVzc2FnZSIsInNldFBvcHVwSW5wdXQiLCJhbGwiLCJnZXRJbml0aWFsQ2FyZHMiLCJnZXRVc2VyRGF0YSIsImRhdGEiLCJzZXRBdmF0YXIiLCJzZXRVc2VySWQiLCJpbml0aWFsaXplVXNlciJdLCJtYXBwaW5ncyI6InlCQUFPLElBQU1BLEVBQXdCQyxTQUFTQyxjQUFjLHNCQUMvQ0MsRUFBb0JGLFNBQVNDLGNBQWMscUJBQzNDRSxFQUFzQkgsU0FBU0MsY0FBYyxrQkFDN0NHLEVBQXlCSixTQUFTQyxjQUFjLGlCQUNoREksRUFBdUJMLFNBQVNDLGNBQWMsb0JBQzlDSyxFQUFzQk4sU0FBU0MsY0FBYyxpQ0FDN0NNLEVBQXVCUCxTQUFTQyxjQUFjLGtDQUM5Q08sRUFBK0JSLFNBQVNDLGNBQWMseUNBQ3REUSxFQUF3QlQsU0FBU0MsY0FBYyxvQ0FDL0NTLEVBQXlCVixTQUFTQyxjQUFjLG9DQUNoRFUsRUFBaUJMLEVBQW9CTCxjQUFjLFFBQ25EVyxFQUFrQkwsRUFBcUJOLGNBQWMsUUFDckRZLEVBQTBCTCxFQUE2QlAsY0FBYyxRQUNyRWEsRUFBcUJkLFNBQVNDLGNBQWMsMkJBQzVDYyxFQUFvQmYsU0FBU0MsY0FBYywwQkFFM0NlLEdBRHFCaEIsU0FBU0MsY0FBYywyQkFDcEJELFNBQVNDLGNBQWMsV0FDL0NnQixFQUFlakIsU0FBU0MsY0FBYyxrQkFBa0JpQixRQ2pCeERDLEVBQW1CLENBQzlCQyxhQUFjLGVBQ2RDLGNBQWUsZ0JBQ2ZDLHFCQUFzQixjQUN0QkMsb0JBQXFCLHNCQUNyQkMsZ0JBQWlCLDBCQUNqQkMsV0FBWSx3QkNOREMsRUFBYyxTQUFDQyxFQUFjQyxHQUN4QyxJQUFNQyxFQUFVRixFQUFhMUIsY0FBYyx5QkFFekM0QixFQUFRQyxVQURORixFQUNrQkMsRUFBUUUsYUFBYSxvQkFFckJGLEVBQVFFLGFBQWEsdUIsMEtDTHhCQyxFLFdBQ25CLFdBQVlDLEVBQXdCQyxJLDRGQUFZLFNBQzlDQyxLQUFLQyxJQUFNSCxFQUNYRSxLQUFLRSxRQUFVSCxFQUNmQyxLQUFLRyxRQUFVLFcsZ0RBR2pCLFdBQ0UsT0FBT0MsTUFBTSxHQUFELE9BQUlKLEtBQUtDLEtBQVQsT0FBZUQsS0FBS0csUUFBcEIsYUFDVkgsS0FBS0UsU0FFSkcsTUFBSyxTQUFBQyxHQUNKLE9BQUlBLEVBQUlDLEdBQ0NELEVBQUlFLE9BR05DLFFBQVFDLE9BQVIsZ0JBQXdCSixFQUFJSyxjLDZCQUl6QyxXQUNFLE9BQU9QLE1BQU0sR0FBRCxPQUFJSixLQUFLQyxJQUFULFlBQWdCRCxLQUFLRyxRQUFyQixVQUFzQ0gsS0FBS0UsU0FDcERHLE1BQUssU0FBQUMsR0FDSixPQUFJQSxFQUFJQyxHQUNDRCxFQUFJRSxPQUVOQyxRQUFRQyxPQUFSLGdCQUF3QkosRUFBSUssYyx3QkFJekMsU0FBV0MsR0FDVCxPQUFPUixNQUFNLEdBQUQsT0FBSUosS0FBS0MsSUFBVCxZQUFnQkQsS0FBS0csUUFBckIsYUFBeUMsQ0FDbkRVLE9BQVEsUUFDUkMsUUFBU2QsS0FBS0UsUUFBUVksUUFDdEJDLEtBQU1DLEtBQUtDLFVBQVUsQ0FDbkJDLEtBQU1OLEVBQVNNLEtBQ2ZDLE1BQU9QLEVBQVNPLFVBR2pCZCxNQUFLLFNBQUFDLEdBQ0osT0FBSUEsRUFBSUMsR0FDQ0QsRUFBSUUsT0FFTkMsUUFBUUMsT0FBUixnQkFBd0JKLEVBQUlLLGMscUJBSXpDLFNBQVFTLEdBQ04sT0FBT2hCLE1BQU0sR0FBRCxPQUFJSixLQUFLQyxJQUFULFlBQWdCRCxLQUFLRyxRQUFyQixVQUFzQyxDQUNoRFUsT0FBUSxPQUNSQyxRQUFTZCxLQUFLRSxRQUFRWSxRQUN0QkMsS0FBTUMsS0FBS0MsVUFBVSxDQUNuQkMsS0FBTUUsRUFBU0YsS0FDZkcsS0FBTUQsRUFBU0MsU0FHaEJoQixNQUFLLFNBQUFDLEdBQ0osT0FBSUEsRUFBSUMsR0FDQ0QsRUFBSUUsT0FFTkMsUUFBUUMsT0FBUixnQkFBd0JKLEVBQUlLLGMsd0JBSXpDLFNBQVdXLEdBQ1QsT0FBT2xCLE1BQU0sR0FBRCxPQUFJSixLQUFLQyxJQUFULFlBQWdCRCxLQUFLRyxRQUFyQixrQkFBc0NtQixHQUFVLENBQzFEVCxPQUFRLFNBQ1JDLFFBQVNkLEtBQUtFLFFBQVFZLFVBRXJCVCxNQUFLLFNBQUFDLEdBQ0osT0FBSUEsRUFBSUMsR0FDQ0QsRUFBSUUsT0FFTkMsUUFBUUMsT0FBUixnQkFBd0JKLEVBQUlLLGMscUJBSXpDLFNBQVFXLEdBQ04sT0FBT2xCLE1BQU0sR0FBRCxPQUFJSixLQUFLQyxJQUFULFlBQWdCRCxLQUFLRyxRQUFyQix3QkFBNENtQixHQUFVLENBQ2hFVCxPQUFRLE1BQ1JDLFFBQVNkLEtBQUtFLFFBQVFZLFVBRXJCVCxNQUFLLFNBQUFDLEdBQ0osT0FBSUEsRUFBSUMsR0FDQ0QsRUFBSUUsT0FFTkMsUUFBUUMsT0FBUixnQkFBd0JKLEVBQUlLLGMsd0JBSXpDLFNBQVdXLEdBQ1QsT0FBT2xCLE1BQU0sR0FBRCxPQUFJSixLQUFLQyxJQUFULFlBQWdCRCxLQUFLRyxRQUFyQix3QkFBNENtQixHQUFVLENBQ2hFVCxPQUFRLFNBQ1JDLFFBQVNkLEtBQUtFLFFBQVFZLFVBRXJCVCxNQUFLLFNBQUFDLEdBQ0osT0FBSUEsRUFBSUMsR0FDQ0QsRUFBSUUsT0FFTkMsUUFBUUMsT0FBUixnQkFBd0JKLEVBQUlLLGMsOEJBSXpDLFNBQWlCWSxHQUNmLE9BQU9uQixNQUFNLEdBQUQsT0FBSUosS0FBS0MsSUFBVCxZQUFnQkQsS0FBS0csUUFBckIsb0JBQWdELENBQzFEVSxPQUFRLFFBQ1JDLFFBQVNkLEtBQUtFLFFBQVFZLFFBQ3RCQyxLQUFNQyxLQUFLQyxVQUFVLENBQ25CTyxPQUFRRCxFQUFXQyxXQUdwQm5CLE1BQUssU0FBQUMsR0FDSixPQUFJQSxFQUFJQyxHQUNDRCxFQUFJRSxPQUVOQyxRQUFRQyxPQUFSLGdCQUF3QkosRUFBSUssaUIsNExDbkhwQyxJQUFNYyxFQUFiLFdBQ0UsYUFBaUlDLEVBQVE1QyxHQUFjLElBQXpJb0MsRUFBeUksRUFBeklBLEtBQU1HLEVBQW1JLEVBQW5JQSxLQUFNTSxFQUE2SCxFQUE3SEEsSUFBS0MsRUFBd0gsRUFBeEhBLE1BQU9DLEVBQWlILEVBQWpIQSxNQUFPQyxFQUEwRyxFQUExR0EsMEJBQTJCQyxFQUErRSxFQUEvRUEsMkJBQTRCQyxFQUFtRCxFQUFuREEsMkIsNEZBQW1ELFNBQ3JKaEMsS0FBS2lDLFNBQVdmLEVBQ2hCbEIsS0FBS2tDLFNBQVdiLEVBQ2hCckIsS0FBS3NCLE9BQVNLLEVBQ2QzQixLQUFLbUMsWUFBY04sRUFBTUYsSUFDekIzQixLQUFLb0MsVUFBWVIsRUFDakI1QixLQUFLMEIsT0FBU0EsRUFDZDFCLEtBQUtxQyxnQkFBa0JQLEVBQ3ZCOUIsS0FBS3NDLGlCQUFtQlAsRUFDeEIvQixLQUFLdUMsZ0JBQWtCUCxFQUN2QmhDLEtBQUtsQixhQUFlQSxFQUNwQmtCLEtBQUtOLFFBQVVNLEtBQUt3QyxlQUNwQnhDLEtBQUt5QyxRQUFVekMsS0FBS04sUUFBUTVCLGNBQWMsYyxRQWI5QyxPLEVBQUEsRyxFQUFBLDJCQWdCRSxXQUNFLE9BQU9rQyxLQUFLbEIsYUFBYWhCLGNBQWMsU0FBUzRFLFdBQVUsS0FqQjlELHdCQW9CRSxTQUFXQyxHQUNUQSxFQUFNQyxPQUFPQyxVQUFVQyxPQUFPLHVCQXJCbEMsdUJBd0JFLFNBQVV4QyxFQUFLcUMsR0FDYkEsRUFBTUMsT0FBT0csUUFBUSxTQUFTakYsY0FBYyxxQkFBcUJrRixZQUFlMUMsRUFBSXNCLE1BQU9xQixTQXpCL0Ysd0JBNEJFLFNBQVczQyxFQUFLcUMsR0FDZEEsRUFBTUMsT0FBT0csUUFBUSxTQUFTakYsY0FBYyxxQkFBcUJrRixZQUFlMUMsRUFBSXNCLE1BQU9xQixTQTdCL0Ysc0JBZ0NFLFNBQVMzQyxFQUFLcUMsR0FDWjNDLEtBQUtrRCxXQUFXUCxHQUNoQjNDLEtBQUttRCxVQUFVN0MsRUFBS3FDLEtBbEN4Qix5QkFxQ0UsU0FBWXJDLEVBQUtxQyxHQUNmM0MsS0FBS2tELFdBQVdQLEdBQ2hCM0MsS0FBS29ELFdBQVc5QyxFQUFLcUMsS0F2Q3pCLGtDQTBDRSxXQUF1QixXQUNyQjNDLEtBQUtvQyxVQUFVaUIsU0FBUSxTQUFBQyxHQUNqQkEsRUFBSSxNQUFZLEVBQUs1QixRQUN2QixFQUFLaEMsUUFBUTVCLGNBQWMsbUJBQW1CK0UsVUFBVUMsT0FBTywwQkE3Q3ZFLHdCQWtERSxXQUNFOUMsS0FBS04sUUFBUTVCLGNBQWMsaUJBQWlCeUYsTUFBTUMsUUFBVSxTQW5EaEUsZ0NBc0RFLFdBQXFCLFdBQ25CeEQsS0FBS04sUUFBUTVCLGNBQWMsbUJBQW1CMkYsaUJBQWlCLFFBQVN6RCxLQUFLdUMsaUJBQzdFdkMsS0FBS04sUUFBUTVCLGNBQWMsaUJBQWlCMkYsaUJBQWlCLFNBQVMsU0FBQ2QsR0FDckVBLEVBQU1lLGVBQ04sRUFBS3BCLGlCQUFpQixFQUFLaEIsV0FFN0J0QixLQUFLeUMsUUFBUWdCLGlCQUFpQixRQUFTekQsS0FBS3FDLG1CQTVEaEQsMEJBK0RFLFdBWUUsT0FYQXJDLEtBQUt5QyxRQUFRa0IsSUFBTTNELEtBQUtrQyxTQUN4QmxDLEtBQUtOLFFBQVE1QixjQUFjLGdCQUFnQmtGLFlBQWNoRCxLQUFLaUMsU0FDOURqQyxLQUFLeUMsUUFBUW1CLElBQU01RCxLQUFLaUMsU0FDeEJqQyxLQUFLTixRQUFRNUIsY0FBYyxxQkFBcUJrRixZQUFjYSxPQUFPQyxLQUFLOUQsS0FBS29DLFdBQVdhLE9BRTFGakQsS0FBS04sUUFBUXFFLEdBQUsvRCxLQUFLc0IsT0FFbkJ0QixLQUFLb0MsVUFBVWEsT0FBUyxHQUFHakQsS0FBS2dFLHVCQUNoQ2hFLEtBQUttQyxjQUFnQm5DLEtBQUswQixRQUFRMUIsS0FBS2lFLGFBRTNDakUsS0FBS2tFLHFCQUNFbEUsS0FBS04sYSxpQkEzRWhCLEssc0tDQU8sSUFBTXlFLEVBQWIsV0FDRSxXQUFZQyxFQUFZQyxJLDRGQUFhLFNBQ25DckUsS0FBS2YsYUFBZW1GLEVBQVduRixhQUMvQmUsS0FBS2QsY0FBZ0JrRixFQUFXbEYsY0FDaENjLEtBQUtiLHFCQUF1QmlGLEVBQVdqRixxQkFDdkNhLEtBQUtaLG9CQUFzQmdGLEVBQVdoRixvQkFDdENZLEtBQUtYLGdCQUFrQitFLEVBQVcvRSxnQkFDbENXLEtBQUtWLFdBQWE4RSxFQUFXOUUsV0FDN0JVLEtBQUtxRSxZQUFjQSxFQUNuQnJFLEtBQUtzRSxVQUFZQyxNQUFNQyxLQUFLeEUsS0FBS3FFLFlBQVlJLGlCQUFpQnpFLEtBQUtkLGdCQUNuRWMsS0FBSzBFLGNBQWdCMUUsS0FBS3FFLFlBQVl2RyxjQUFja0MsS0FBS2Isc0IsUUFWN0QsTyxFQUFBLEcsRUFBQSxnQ0FhRSxTQUFrQmtGLEdBQWEsV0FDN0IsR0FBTUEsRUFBYSxDQUNqQixJQUFNTSxFQUFtQk4sRUFBWUksaUJBQVosV0FBaUN6RSxLQUFLVixhQUN6RHNGLEVBQXdCUCxFQUFZSSxpQkFBWixXQUFpQ3pFLEtBQUtYLGtCQUNwRWdGLEVBQVlRLFFBQ1JGLEVBQWlCMUIsT0FBUyxHQUM1QjBCLEVBQWlCdEIsU0FBUSxTQUFDeUIsR0FDeEJBLEVBQU1qQyxVQUFVa0MsT0FBTyxFQUFLekYsZUFHNUJzRixFQUFzQjNCLE9BQVMsR0FDakMyQixFQUFzQnZCLFNBQVEsU0FBQzJCLEdBQzdCQSxFQUFXbkMsVUFBVWtDLE9BQU8sRUFBSzFGLG9CQUl2Q1csS0FBS2lGLG9CQTdCVCw2QkFnQ0UsU0FBZ0JDLEVBQWNDLEdBQzVCLElBQU1DLEVBQWVwRixLQUFLcUUsWUFBWXZHLGNBQWpCLFdBQW1Db0gsRUFBYW5CLEdBQWhELFdBQ2pCcUIsSUFDRkYsRUFBYXJDLFVBQVV3QyxJQUFJckYsS0FBS1gsaUJBQ2hDK0YsRUFBYXZDLFVBQVV3QyxJQUFJckYsS0FBS1YsWUFDaEM4RixFQUFhcEMsWUFBY21DLEtBckNqQyw2QkF5Q0UsU0FBZ0JELEdBQ2QsSUFBTUUsRUFBZXBGLEtBQUtxRSxZQUFZdkcsY0FBakIsV0FBbUNvSCxFQUFhbkIsR0FBaEQsV0FDakJxQixJQUNGRixFQUFhckMsVUFBVWtDLE9BQU8vRSxLQUFLWCxpQkFDbkMrRixFQUFhdkMsVUFBVWtDLE9BQU8vRSxLQUFLVixZQUNuQzhGLEVBQWFwQyxZQUFjLE1BOUNqQyxpQ0FrREUsU0FBb0JrQyxHQUNiQSxFQUFhSSxTQUFTQyxNQUd6QnZGLEtBQUt3RixnQkFBZ0JOLEdBRnJCbEYsS0FBS3lGLGdCQUFnQlAsRUFBY0EsRUFBYVEscUJBcER0RCw4QkEwREUsU0FBaUJwQixHQUNmLE9BQU9BLEVBQVVxQixNQUFLLFNBQUFULEdBQ3BCLE9BQVNBLEVBQWFJLFNBQVNDLFdBNURyQyw2QkFnRUUsV0FDTXZGLEtBQUs0RixpQkFBaUI1RixLQUFLc0UsWUFDN0J0RSxLQUFLMEUsY0FBYzdCLFVBQVV3QyxJQUFJckYsS0FBS1oscUJBRXRDWSxLQUFLMEUsY0FBY21CLFVBQVcsSUFHOUI3RixLQUFLMEUsY0FBYzdCLFVBQVVrQyxPQUFPL0UsS0FBS1oscUJBRXpDWSxLQUFLMEUsY0FBY21CLFVBQVcsS0F6RXBDLCtCQTZFRSxXQUNFLElBQU1DLEVBQVE5RixLQUNkQSxLQUFLc0UsVUFBVWpCLFNBQVEsU0FBQTZCLEdBQ3JCQSxFQUFhekIsaUJBQWlCLFNBQVMsV0FDckNxQyxFQUFNQyxvQkFBb0JiLEdBQzFCWSxFQUFNYix3QkFHVmpGLEtBQUtxRSxZQUFZWixpQkFBaUIsVUFBVSxTQUFDdUMsR0FDM0NBLEVBQUV0QyxzQkF0RlIsOEJBNEZFLFdBQ0UxRCxLQUFLaUYsa0JBQ0xqRixLQUFLaUcseUIsaUJBOUZULEssMEtDQXFCQyxFLFdBQ25CLGFBQWlDQyxHQUFtQixJQUF0Q0MsRUFBc0MsRUFBdENBLE1BQU9DLEVBQStCLEVBQS9CQSxVLDRGQUErQixTQUNsRHJHLEtBQUtzRyxPQUFTRixFQUNkcEcsS0FBS3VHLFVBQVlGLEVBQ2pCckcsS0FBS3dHLFdBQWFMLEUsZ0RBR3BCLFdBQWMsV0FDUG5HLEtBQUtzRyxPQUFRckQsT0FBUyxFQUN6QmpELEtBQUtzRyxPQUFPakQsU0FBUSxTQUFBb0QsR0FBVSxFQUFLRixVQUFVRSxNQUU3Q3pHLEtBQUt1RyxVQUFVdkcsS0FBS3NHLFUsNEJBSXhCLFNBQWU1RyxHQUNiTSxLQUFLd0csV0FBV0UsT0FBT2hILEssd0JBR3pCLFNBQVdBLEdBQ1RNLEtBQUt3RyxXQUFXRyxRQUFRakgsUSxnTUNwQlBrSCxFLFdBQ25CLFdBQVk1SSxFQUFxQkMsRUFBd0JDLEksNEZBQXNCLFNBQzdFOEIsS0FBS2tCLEtBQU9sRCxFQUNaZ0MsS0FBSzZHLElBQU01SSxFQUNYK0IsS0FBS3dCLE9BQVN0RCxFQUNkOEIsS0FBSzBCLE9BQVMsRyxnREFHaEIsU0FBWWQsR0FDVlosS0FBS2tCLEtBQUs4QixZQUFjcEMsRUFBU00sS0FDakNsQixLQUFLNkcsSUFBSTdELFlBQWNwQyxFQUFTTyxRLDJCQUdsQyxTQUFjMkYsRUFBa0JDLEdBQzlCRCxFQUFpQkUsTUFBUWhILEtBQUtrQixLQUFLOEIsWUFDbkMrRCxFQUFnQkMsTUFBUWhILEtBQUs2RyxJQUFJN0QsYyx1QkFHbkMsU0FBVXBDLEdBQ1JaLEtBQUt3QixPQUFPK0IsTUFBTTBELGdCQUFsQixjQUEyQ3JHLEVBQVNZLE9BQXBELE8sdUJBR0YsU0FBVVosR0FDUlosS0FBSzBCLE9BQVNkLEVBQVNlLE0sdUJBR3pCLFdBQ0UsT0FBTzNCLEtBQUswQixZLGdNQzNCS3dGLEUsV0FDbkIsV0FBWTFILEdBQWMsSSxJQUFBLFEsNEZBQUEsUyxFQXNCUixTQUFDbUQsR0FDYkEsRUFBTUMsT0FBT0MsVUFBVXNFLFNBQVMsaUJBQWlCLEVBQUtDLFUsRUF2QmxDLDBCLHNCQUFBLEssdURBQUEsSyxLQUN4QnBILEtBQUtxSCxjQUFnQjdILEVBQ3JCUSxLQUFLc0gsZ0JBQWtCdEgsS0FBS3NILGdCQUFnQkMsS0FBS3ZILE1BQ2pEQSxLQUFLb0gsTUFBUXBILEtBQUtvSCxNQUFNRyxLQUFLdkgsTUFDN0JBLEtBQUt3SCxnQkFBa0JoSSxFQUFhMUIsY0FBYywwQixzREFHcEQsV0FDRWtDLEtBQUtxSCxjQUFjNUQsaUJBQWlCLFFBQVN6RCxLQUFLeUgsaUJBQ2xEekgsS0FBS3dILGdCQUFnQi9ELGlCQUFpQixRQUFTekQsS0FBS29ILFMsa0JBR3RELFdBQ0VwSCxLQUFLcUgsY0FBY3hFLFVBQVV3QyxJQUFJLGdCQUNqQ3hILFNBQVM0RixpQkFBaUIsVUFBV3pELEtBQUtzSCxtQixtQkFHNUMsV0FDRXRILEtBQUtxSCxjQUFjeEUsVUFBVWtDLE9BQU8sZ0JBQ3BDbEgsU0FBUzZKLG9CQUFvQixVQUFXMUgsS0FBS3NILG1CLDZCQU8vQyxTQUFnQjNFLEdBQ0ksV0FBZEEsRUFBTWdGLEtBQWtCM0gsS0FBS29ILGEsMm1DQzFCaEJRLEUsdXBCQUNuQixXQUFZcEksRUFBY3FJLEdBQTRCLGEsNEZBQUEsVUFDcEQsY0FBTXJJLElBQ0RBLGFBQWVBLEVBQ3BCLEVBQUtzSSxpQkFBbUJELEVBQTJCTixLQUEzQixNQUg0QixFLDRDQU10RCxXQUNFLElBQU1RLEVBQVcsR0FJakIsT0FIQXhELE1BQU1DLEtBQUt4RSxLQUFLUixhQUFhaUYsaUJBQWlCLGtCQUFrQnBCLFNBQVEsU0FBQW9ELEdBQ3RFc0IsRUFBU3RCLEVBQUt2RixNQUFRdUYsRUFBS08sU0FFdEJlLEksK0JBR1QsV0FBb0IsV0FDbEIsc0RBQ0EvSCxLQUFLUixhQUFhMUIsY0FBYyxRQUFRMkYsaUJBQWlCLFVBQVUsU0FBQ2QsR0FDbEVBLEVBQU1lLGlCQUNOLEVBQUtvRSxpQkFBaUIsRUFBS0UsMkIsb0JBbkJVZCxHLGtsQ0NBdEJlLEUsdXBCQUNuQixXQUFZekksR0FBYyxhLDRGQUFBLFVBQ3hCLGNBQU1BLElBQ0RBLGFBQWVBLEVBQ3BCLEVBQUswSSxTQUFXMUksRUFBYTFCLGNBQWMsZUFDM0MsRUFBS3FLLGdCQUFrQjNJLEVBQWExQixjQUFjLHVCQUoxQixFLGlDQU8xQixTQUFLNkUsR0FDSCxzREFDQSxJQUFNeUYsRUFBVyxHQUFILE9BQU96RixFQUFNQyxPQUFPeUYsY0FBZXZLLGNBQWMsZ0JBQWdCa0YsYUFDL0VoRCxLQUFLa0ksU0FBU3ZFLElBQU0sR0FDcEIzRCxLQUFLa0ksU0FBU3ZFLElBQU1oQixFQUFNQyxPQUFPZSxJQUNqQzNELEtBQUttSSxnQkFBZ0JuRixZQUFjb0YsRUFDbkNwSSxLQUFLa0ksU0FBU3RFLElBQU13RSxFQUNwQiw4QyxvQkFmd0NsQixHLGtsQ0NBdkJvQixFLHVwQkFDbkIsV0FBWTlJLEVBQWMrSSxHQUF3QixhLDRGQUFBLFVBQ2hELGNBQU0vSSxJQUNEQSxhQUFlQSxFQUNwQixFQUFLZ0osYUFBZUQsRUFDcEIsRUFBS2pILE9BQVMsR0FKa0MsRSxpQ0FPbEQsU0FBS0EsR0FDSCx5Q0FDQXRCLEtBQUtzQixPQUFTQSxFQUNkdEIsS0FBS3lJLHNCLCtCQUdQLFdBQW9CLFdBQ2xCekksS0FBS1IsYUFBYTFCLGNBQWMsUUFBUTJGLGlCQUFpQixVQUFVLFNBQUNkLEdBQ2xFQSxFQUFNZSxpQkFDTixFQUFLOEUsdUIsb0JBakJrQ3RCLEdDNEJ2Q3dCLEVBQU0sSUFBSUMsRUFDZCxzQ0FBdUMsQ0FDdkM5SCxPQUFRLE1BQ1JDLFFBQVMsQ0FDUDhILGNBQWUsdUNBQ2YsZUFBZ0Isc0JBUWRDLEdBQWlCLElBQUlaLEVBQWUzSixHQUNwQ3lKLEdBQVcsSUFBSW5CLEVBQVM1SSxFQUFxQkMsRUFBd0JDLEdBRXJFNEQsR0FBNEIsU0FBQ2EsR0FDakNrRyxHQUFlQyxLQUFLbkcsSUFHaEJaLEdBQTZCLFNBQUNULEdBQ2xDeUgsR0FBZ0JELEtBQUt4SCxJQUdqQjBILEdBQWEsU0FBQyxHQUFzQyxJQUFwQzlILEVBQW9DLEVBQXBDQSxLQUFNRyxFQUE4QixFQUE5QkEsS0FBTU0sRUFBd0IsRUFBeEJBLElBQUtDLEVBQW1CLEVBQW5CQSxNQUFPQyxFQUFZLEVBQVpBLE1BQ3RDSCxFQUFTcUcsR0FBU2tCLFlBQ2xCQyxFQUFjLElBQUl6SCxFQUFLLENBQzNCUCxPQUFNRyxPQUFNTSxNQUFLQyxRQUFPQyxRQUFPQyw2QkFBMkJDLDhCQUMxREMsMEJBQTJCLFNBQUNXLEdBQzFCLElBQU1yQixFQUFTcUIsRUFBTUMsT0FBT0csUUFBUSxTQUFTZ0IsR0FDM0NwQixFQUFNQyxPQUFPQyxVQUFVc0UsU0FBUyxxQkFROUJ1QixFQUFJUyxXQUFXN0gsR0FDZGpCLE1BQUssU0FBQ0MsR0FDTDRJLEVBQVlFLFlBQVk5SSxFQUFLcUMsTUFFOUIwRyxPQUFNLFNBQUFDLEdBQ0xDLFFBQVFDLElBQVIsaUJBQXNCRixPQVp4QlosRUFBSWUsUUFBUW5JLEdBQ1hqQixNQUFLLFNBQUNDLEdBQ0w0SSxFQUFZUSxTQUFTcEosRUFBS3FDLE1BRTNCMEcsT0FBTSxTQUFBQyxHQUNMQyxRQUFRQyxJQUFSLGlCQUFzQkYsU0FVN0I1SCxFQUFRNUMsR0FDWCxPQUFPb0ssRUFBWVMsZ0JBR2ZDLEdBQWdCLFNBQUN4SSxHQUE2QixJQUFuQnVGLElBQW1CLHlEQUM1Q2tELEVBQVUsSUFBSTNELEVBQVEsQ0FDMUJFLE1BQU9oRixFQUNQaUYsU0FBVSxTQUFDSSxHQUNULElBQU1xRCxFQUFPZCxHQUFXdkMsR0FDeEJFLEVBQ0lrRCxFQUFRRSxXQUFXRCxHQUNuQkQsRUFBUUcsZUFBZUYsS0FFNUJqTCxHQUNILE9BQU9nTCxHQStESEksR0FBb0IsSUFBSTlGLEVBQWNuRixFQUFrQlosR0FDeEQ4TCxHQUFtQixJQUFJL0YsRUFBY25GLEVBQWtCYixHQUN2RGdNLEdBQW1CLElBQUloRyxFQUFjbkYsRUFBa0JYLEdBQzdENEwsR0FBa0JHLG1CQUNsQkYsR0FBaUJFLG1CQUNqQkQsR0FBaUJDLG1CQU1qQixJQUFNQyxHQUFtQixJQUFJekMsRUFBY3hKLEdBdkVkLFNBQUNrTSxHQUM1Qi9LLEVBQVluQixHQUFzQixHQUNsQ3NLLEVBQUk2QixXQUFXRCxHQUNaakssTUFBSyxTQUFDbUssR0FDTHpDLEdBQVMwQyxZQUFZRCxHQUNyQkgsR0FBaUJqRCxXQUVsQmlDLE9BQU0sU0FBQUMsR0FDTEMsUUFBUUMsSUFBUixpQkFBc0JGLE9BRXZCakosTUFBSyxXQUNKZCxFQUFZbkIsR0FBc0IsU0E2RGxDc00sR0FBZSxJQUFJOUMsRUFBY3pKLEdBekRYLFNBQUNtTSxHQUMzQi9LLEVBQVlwQixHQUFxQixHQUNqQ3VLLEVBQUlpQyxRQUFRTCxHQUNUakssTUFBSyxTQUFDQyxHQUNMc0osR0FBY3RKLEdBQUtzSyxjQUNuQkYsR0FBYXRELFdBQ1ppQyxPQUFNLFNBQUFDLEdBQ1BDLFFBQVFDLElBQVIsaUJBQXNCRixPQUV2QmpKLE1BQUssV0FDSmQsRUFBWXBCLEdBQXFCLFNBZ0RqQzBNLEdBQW9CLElBQUlqRCxFQUFjdkosR0E1Q2pCLFNBQUN5TSxHQUMxQnZMLEVBQVlsQixHQUE4QixHQUMxQ3FLLEVBQUlxQyxpQkFBaUJELEdBQ2xCekssTUFBSyxTQUFDbUssR0FDTHRNLHdCQUFBLGNBQXFEc00sRUFBT2hKLE9BQVF3SixXQUFwRSxLQUNBSCxHQUFrQnpELFdBRW5CaUMsT0FBTSxTQUFBQyxHQUNMQyxRQUFRQyxJQUFSLGlCQUFzQkYsT0FFdkJqSixNQUFLLFdBQ0pkLEVBQVlsQixHQUE4QixTQWtDMUMwSyxHQUFrQixJQUFJVCxFQUFnQi9KLEdBOUJiLFdBQzdCLElBQU0rQyxFQUFTeUgsR0FBZ0J6SCxPQUMvQm9ILEVBQUl1QyxXQUFXM0osR0FDWmpCLE1BQUssV0FDSnhDLFNBQVNxTixlQUFULFVBQTJCbkMsR0FBZ0J6SCxTQUFVeUQsU0FDckRnRSxHQUFnQjNCLFdBRWpCaUMsT0FBTSxTQUFBQyxHQUNMQyxRQUFRQyxJQUFSLGlCQUFzQkYsVUF1QjVCZSxHQUFpQjVCLG9CQUNqQmlDLEdBQWFqQyxvQkFDYm9DLEdBQWtCcEMsb0JBQ2xCTSxHQUFnQk4sb0JBRWhCN0ssRUFBc0I2RixpQkFBaUIsU0FBUyxXQUM5Q3dHLEdBQWtCa0Isa0JBQWtCMU0sR0FDcENzSixHQUFTcUQsY0FBY3pNLEVBQW9CQyxHQUMzQ3lMLEdBQWlCdkIsVUFHbkIvSyxFQUFrQjBGLGlCQUFpQixTQUFTLFdBQzFDeUcsR0FBaUJpQixrQkFBa0IzTSxHQUNuQ2tNLEdBQWE1QixVQUdmNUssRUFBcUJ1RixpQkFBaUIsU0FBUyxXQUM3QzBHLEdBQWlCZ0Isa0JBQWtCek0sR0FDbkNtTSxHQUFrQi9CLFVBcUJwQnJJLFFBQVE0SyxJQUFJLENBQ1YzQyxFQUFJNEMsa0JBQ0o1QyxFQUFJNkMsZ0JBRUhsTCxNQUFLLFNBQUFtTCxHQUVKLE9BaEJtQixTQUFDQSxHQUN0QnpELEdBQVMwQyxZQUFZZSxHQUNyQnpELEdBQVMwRCxVQUFVRCxHQUNuQnpELEdBQVMyRCxVQUFVRixHQVlqQkcsQ0FBZUgsRUFBSyxJQUNiQSxLQUNObkMsT0FBTSxTQUFBdkUsR0FDUCx1QkFBa0JBLE1BRW5CekUsTUFBSyxTQUFDbUwsR0F4QmUsSUFBQ3BLLElBeUJMb0ssRUFBSyxHQXhCdkI1QixHQUFjeEksR0FBVSxHQUFPd0osaUJBeUI1QnZCLE9BQU0sU0FBQXZFLEdBQ1AsdUJBQWtCQSxNIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZWRpdFByb2ZpbGVCdG5FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2VkaXQtYnRuJylcbmV4cG9ydCBjb25zdCBhZGRDYXJkQnRuRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hZGQtYnRuJylcbmV4cG9ydCBjb25zdCBwcm9maWxlVGl0bGVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX25hbWUnKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlU3VidGl0bGVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2pvYicpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVBdmF0YXJFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2F2YXRhcicpO1xuZXhwb3J0IGNvbnN0IHBvcHVwRm9ybUFkZEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1mb3JtPVwicG9wdXBfX2Zvcm1fYWRkXCJdJylcbmV4cG9ydCBjb25zdCBwb3B1cEZvcm1FZGl0RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWZvcm09XCJwb3B1cF9fZm9ybV9lZGl0XCJdJyk7XG5leHBvcnQgY29uc3QgcG9wdXBGb3JtQ2hhbmdlQXZhdGFyRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWZvcm09XCJwb3B1cF9fZm9ybV9lZGl0LWF2YXRhclwiXScpXG5leHBvcnQgY29uc3QgcG9wdXBWaWV3SW1hZ2VFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtaW1hZ2U9XCJwb3B1cF9fdmlld19pbWFnZVwiXScpXG5leHBvcnQgY29uc3QgcG9wdXBEZWxldGVDYXJkRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWZvcm09XCJwb3B1cF9fZm9ybV9kZWxldGVcIl0nKVxuZXhwb3J0IGNvbnN0IGZvcm1BZGRFbGVtZW50ID0gcG9wdXBGb3JtQWRkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCdmb3JtJyk7XG5leHBvcnQgY29uc3QgZm9ybUVkaXRFbGVtZW50ID0gcG9wdXBGb3JtRWRpdEVsZW1lbnQucXVlcnlTZWxlY3RvcignZm9ybScpO1xuZXhwb3J0IGNvbnN0IGZvcm1DaGFuZ2VBdmF0YXJFbGVtZW50ID0gcG9wdXBGb3JtQ2hhbmdlQXZhdGFyRWxlbWVudC5xdWVyeVNlbGVjdG9yKCdmb3JtJyk7XG5leHBvcnQgY29uc3QgcG9wdXBJbnB1dFR5cGVOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbnB1dF90eXBlX25hbWUnKTtcbmV4cG9ydCBjb25zdCBwb3B1cElucHV0VHlwZUpvYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfdHlwZV9qb2InKTtcbmV4cG9ydCBjb25zdCBwb3B1cElucHV0VHlwZUxpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X3R5cGVfbGluaycpO1xuZXhwb3J0IGNvbnN0IGNhcmRzQ29udGFpbmVyRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNcIik7XG5leHBvcnQgY29uc3QgY2FyZFRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXJkLXRlbXBsYXRlXCIpLmNvbnRlbnQ7XG4iLCJleHBvcnQgY29uc3QgdmFsaWRhdGlvbkNvbmZpZyA9IHtcbiAgZm9ybVNlbGVjdG9yOiBcIi5wb3B1cF9fZm9ybVwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5wb3B1cF9faW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLnBvcHVwX19idG5cIixcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJwb3B1cF9fYnRuX2Rpc2FibGVkXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJwb3B1cF9faW5wdXRfdHlwZV9lcnJvclwiLFxuICBlcnJvckNsYXNzOiBcInBvcHVwX19lcnJvcl92aXNpYmxlXCJcbn07XG4iLCJleHBvcnQgY29uc3QgbG9hZGluZ1RleHQgPSAocG9wdXBFbGVtZW50LCBpc1NhdmluZykgPT4ge1xuICBjb25zdCBlbGVtZW50ID0gcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fYnRuX3R5cGVfc2F2ZScpXG4gIGlmIChpc1NhdmluZykge1xuICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXRleHQtc2F2aW5nXCIpXG4gIH0gZWxzZSB7XG4gICAgZWxlbWVudC5pbm5lckhUTUwgPSBlbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtdGV4dC1vcmlnaW5hbFwiKVxuICB9XG59XG5cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yKHVybFRvUmVxdWVzdGVkUmVzb3VyY2UsIG9wdGlvbnNPYmopIHtcbiAgICB0aGlzLnVybCA9IHVybFRvUmVxdWVzdGVkUmVzb3VyY2U7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9uc09iajtcbiAgICB0aGlzLmdyb3VwSWQgPSBcImdyb3VwLTEyXCI7XG4gIH1cblxuICBnZXRVc2VyRGF0YSgpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy51cmx9JHt0aGlzLmdyb3VwSWR9L3VzZXJzL21lYCxcbiAgICAgIHRoaXMub3B0aW9uc1xuICAgIClcbiAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKVxuICAgICAgICB9XG4gICAgICAgIC8vIGlmIHRoZSB0aGlzLnVybCByZXR1cm5zIGFuIGVycm9yLCByZWplY3QgdGhlIHByb21pc2VcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjoke3Jlcy5zdGF0dXN9YClcbiAgICAgIH0pXG4gIH1cblxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMudXJsfS8ke3RoaXMuZ3JvdXBJZH0vY2FyZHNgLCB0aGlzLm9wdGlvbnMpXG4gICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKClcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiR7cmVzLnN0YXR1c31gKVxuICAgICAgfSlcbiAgfVxuXG4gIHVwZGF0ZVVzZXIodXNlckRhdGEpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy51cmx9LyR7dGhpcy5ncm91cElkfS91c2Vycy9tZWAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5vcHRpb25zLmhlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IHVzZXJEYXRhLm5hbWUsXG4gICAgICAgIGFib3V0OiB1c2VyRGF0YS5hYm91dFxuICAgICAgfSlcbiAgICB9KVxuICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgIHJldHVybiByZXMuanNvbigpXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjoke3Jlcy5zdGF0dXN9YClcbiAgICAgIH0pXG4gIH1cblxuICBhZGRDYXJkKGNhcmREYXRhKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMudXJsfS8ke3RoaXMuZ3JvdXBJZH0vY2FyZHNgLCB7XG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5vcHRpb25zLmhlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IGNhcmREYXRhLm5hbWUsXG4gICAgICAgIGxpbms6IGNhcmREYXRhLmxpbmssXG4gICAgICB9KVxuICAgIH0pXG4gICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKClcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiR7cmVzLnN0YXR1c31gKVxuICAgICAgfSlcbiAgfVxuXG4gIGRlbGV0ZUNhcmQoY2FyZElkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMudXJsfS8ke3RoaXMuZ3JvdXBJZH0vY2FyZHMvJHtjYXJkSWR9YCwge1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgaGVhZGVyczogdGhpcy5vcHRpb25zLmhlYWRlcnNcbiAgICB9KVxuICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgIHJldHVybiByZXMuanNvbigpXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjoke3Jlcy5zdGF0dXN9YClcbiAgICAgIH0pXG4gIH1cblxuICBhZGRMaWtlKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLnVybH0vJHt0aGlzLmdyb3VwSWR9L2NhcmRzL2xpa2VzLyR7Y2FyZElkfWAsIHtcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMub3B0aW9ucy5oZWFkZXJzXG4gICAgfSlcbiAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6JHtyZXMuc3RhdHVzfWApXG4gICAgICB9KVxuICB9XG5cbiAgcmVtb3ZlTGlrZShjYXJkSWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy51cmx9LyR7dGhpcy5ncm91cElkfS9jYXJkcy9saWtlcy8ke2NhcmRJZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLm9wdGlvbnMuaGVhZGVyc1xuICAgIH0pXG4gICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKClcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiR7cmVzLnN0YXR1c31gKVxuICAgICAgfSlcbiAgfVxuXG4gIGNoYW5nZVByb2ZpbGVQaWMoYXZhdGFyTGluaykge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLnVybH0vJHt0aGlzLmdyb3VwSWR9L3VzZXJzL21lL2F2YXRhcmAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5vcHRpb25zLmhlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGF2YXRhcjogYXZhdGFyTGluay5hdmF0YXJcbiAgICAgIH0pLFxuICAgIH0pXG4gICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKClcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiR7cmVzLnN0YXR1c31gKVxuICAgICAgfSlcbiAgfVxufVxuIiwiZXhwb3J0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3Rvcih7IG5hbWUsIGxpbmssIF9pZCwgbGlrZXMsIG93bmVyLCBoYW5kbGVDYXJkQ2xpY2tDYWxsYmFja0ZuLCBoYW5kbGVUcmFzaENsaWNrQ2FsbGJhY2tGbiwgaGFuZGxlTGlrZUNsaWNrQ2FsbGJhY2tGbiB9LCB1c2VySWQsIGNhcmRUZW1wbGF0ZSkge1xuICAgIHRoaXMuY2FyZE5hbWUgPSBuYW1lO1xuICAgIHRoaXMuY2FyZExpbmsgPSBsaW5rO1xuICAgIHRoaXMuY2FyZElkID0gX2lkO1xuICAgIHRoaXMuY2FyZE93bmVySWQgPSBvd25lci5faWQ7XG4gICAgdGhpcy5jYXJkTGlrZXMgPSBsaWtlcztcbiAgICB0aGlzLnVzZXJJZCA9IHVzZXJJZDtcbiAgICB0aGlzLmhhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGlja0NhbGxiYWNrRm47XG4gICAgdGhpcy5oYW5kbGVUcmFzaENsaWNrID0gaGFuZGxlVHJhc2hDbGlja0NhbGxiYWNrRm47XG4gICAgdGhpcy5oYW5kbGVMaWtlQ2xpY2sgPSBoYW5kbGVMaWtlQ2xpY2tDYWxsYmFja0ZuO1xuICAgIHRoaXMuY2FyZFRlbXBsYXRlID0gY2FyZFRlbXBsYXRlO1xuICAgIHRoaXMuZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XG4gICAgdGhpcy5jYXJkUGljID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fcGljXCIpXG4gIH1cblxuICBfZ2V0VGVtcGxhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2FyZFRlbXBsYXRlLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKS5jbG9uZU5vZGUodHJ1ZSk7XG4gIH1cblxuICBfZmlsbEhlYXJ0KGV2ZW50KSB7XG4gICAgZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC50b2dnbGUoJ2NhcmRfX2xpa2VfYWN0aXZlJyk7XG4gIH1cblxuICBfcGx1c0xpa2UocmVzLCBldmVudCkge1xuICAgIGV2ZW50LnRhcmdldC5jbG9zZXN0KFwiLmNhcmRcIikucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLXRvdGFsXCIpLnRleHRDb250ZW50ID0gKHJlcy5saWtlcykubGVuZ3RoXG4gIH1cblxuICBfbWludXNMaWtlKHJlcywgZXZlbnQpIHtcbiAgICBldmVudC50YXJnZXQuY2xvc2VzdChcIi5jYXJkXCIpLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS10b3RhbFwiKS50ZXh0Q29udGVudCA9IChyZXMubGlrZXMpLmxlbmd0aFxuICB9XG5cbiAgYWRkTGlrZXMocmVzLCBldmVudCkge1xuICAgIHRoaXMuX2ZpbGxIZWFydChldmVudClcbiAgICB0aGlzLl9wbHVzTGlrZShyZXMsIGV2ZW50KVxuICB9XG5cbiAgcmVtb3ZlTGlrZXMocmVzLCBldmVudCkge1xuICAgIHRoaXMuX2ZpbGxIZWFydChldmVudClcbiAgICB0aGlzLl9taW51c0xpa2UocmVzLCBldmVudClcbiAgfVxuXG4gIF9zaG93VXNlckZpbGxlZEhlYXJ0KCkge1xuICAgIHRoaXMuY2FyZExpa2VzLmZvckVhY2gobGlrZSA9PiB7XG4gICAgICBpZiAobGlrZVsnX2lkJ10gPT09IHRoaXMudXNlcklkKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnRuXCIpLmNsYXNzTGlzdC50b2dnbGUoJ2NhcmRfX2xpa2VfYWN0aXZlJylcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgX3Nob3dUcmFzaCgpIHtcbiAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19kZWxldGVcIikuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ0blwiKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuaGFuZGxlTGlrZUNsaWNrKTtcbiAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19kZWxldGVcIikuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0XG4gICAgICB0aGlzLmhhbmRsZVRyYXNoQ2xpY2sodGhpcy5jYXJkSWQpXG4gICAgfSk7XG4gICAgdGhpcy5jYXJkUGljLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5oYW5kbGVDYXJkQ2xpY2spXG4gIH1cblxuICBnZW5lcmF0ZUNhcmQoKSB7XG4gICAgdGhpcy5jYXJkUGljLnNyYyA9IHRoaXMuY2FyZExpbmtcbiAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX3RpdGxlJykudGV4dENvbnRlbnQgPSB0aGlzLmNhcmROYW1lO1xuICAgIHRoaXMuY2FyZFBpYy5hbHQgPSB0aGlzLmNhcmROYW1lO1xuICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fbGlrZS10b3RhbCcpLnRleHRDb250ZW50ID0gT2JqZWN0LmtleXModGhpcy5jYXJkTGlrZXMpLmxlbmd0aFxuXG4gICAgdGhpcy5lbGVtZW50LmlkID0gdGhpcy5jYXJkSWRcblxuICAgIGlmICh0aGlzLmNhcmRMaWtlcy5sZW5ndGggPiAwKSB0aGlzLl9zaG93VXNlckZpbGxlZEhlYXJ0KClcbiAgICBpZiAodGhpcy5jYXJkT3duZXJJZCAhPT0gdGhpcy51c2VySWQpIHRoaXMuX3Nob3dUcmFzaCgpXG5cbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRcbiAgfVxufVxuIiwiZXhwb3J0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3RvcihzZXR0aW5nT2JqLCBmb3JtRWxlbWVudCkge1xuICAgIHRoaXMuZm9ybVNlbGVjdG9yID0gc2V0dGluZ09iai5mb3JtU2VsZWN0b3JcbiAgICB0aGlzLmlucHV0U2VsZWN0b3IgPSBzZXR0aW5nT2JqLmlucHV0U2VsZWN0b3JcbiAgICB0aGlzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yID0gc2V0dGluZ09iai5zdWJtaXRCdXR0b25TZWxlY3RvclxuICAgIHRoaXMuaW5hY3RpdmVCdXR0b25DbGFzcyA9IHNldHRpbmdPYmouaW5hY3RpdmVCdXR0b25DbGFzc1xuICAgIHRoaXMuaW5wdXRFcnJvckNsYXNzID0gc2V0dGluZ09iai5pbnB1dEVycm9yQ2xhc3NcbiAgICB0aGlzLmVycm9yQ2xhc3MgPSBzZXR0aW5nT2JqLmVycm9yQ2xhc3NcbiAgICB0aGlzLmZvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnRcbiAgICB0aGlzLmlucHV0TGlzdCA9IEFycmF5LmZyb20odGhpcy5mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuaW5wdXRTZWxlY3RvcikpXG4gICAgdGhpcy5idXR0b25FbGVtZW50ID0gdGhpcy5mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuc3VibWl0QnV0dG9uU2VsZWN0b3IpXG4gIH1cblxuICByZXNldEVycm9yTWVzc2FnZShmb3JtRWxlbWVudCkge1xuICAgIGlmICghIWZvcm1FbGVtZW50KSB7XG4gICAgICBjb25zdCBlcnJvckVsZW1lbnRMaXN0ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChgLiR7dGhpcy5lcnJvckNsYXNzfWApXG4gICAgICBjb25zdCBpbnB1dEVycm9yRWxlbWVudExpc3QgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKGAuJHt0aGlzLmlucHV0RXJyb3JDbGFzc31gKVxuICAgICAgZm9ybUVsZW1lbnQucmVzZXQoKVxuICAgICAgaWYgKGVycm9yRWxlbWVudExpc3QubGVuZ3RoID4gMCkge1xuICAgICAgICBlcnJvckVsZW1lbnRMaXN0LmZvckVhY2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgZXJyb3IuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLmVycm9yQ2xhc3MpXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgICBpZiAoaW5wdXRFcnJvckVsZW1lbnRMaXN0Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgaW5wdXRFcnJvckVsZW1lbnRMaXN0LmZvckVhY2goKGlucHV0RXJyb3IpID0+IHtcbiAgICAgICAgICBpbnB1dEVycm9yLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5pbnB1dEVycm9yQ2xhc3MpXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMuX3RvZ2dsZUJ0blN0YXRlKCk7XG4gIH1cblxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLmZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKVxuICAgIGlmIChlcnJvckVsZW1lbnQpIHtcbiAgICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuaW5wdXRFcnJvckNsYXNzKTtcbiAgICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuZXJyb3JDbGFzcylcbiAgICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZVxuICAgIH1cbiAgfVxuXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLmZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKVxuICAgIGlmIChlcnJvckVsZW1lbnQpIHtcbiAgICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuaW5wdXRFcnJvckNsYXNzKTtcbiAgICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuZXJyb3JDbGFzcylcbiAgICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCJcbiAgICB9XG4gIH1cblxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSlcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KVxuICAgIH1cbiAgfVxuXG4gIF9oYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSB7XG4gICAgcmV0dXJuIGlucHV0TGlzdC5zb21lKGlucHV0RWxlbWVudCA9PiB7XG4gICAgICByZXR1cm4gIShpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpXG4gICAgfSlcbiAgfVxuXG4gIF90b2dnbGVCdG5TdGF0ZSgpIHtcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KHRoaXMuaW5wdXRMaXN0KSkge1xuICAgICAgdGhpcy5idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKVxuICAgICAgLy8gdGhpcy5idXR0b25FbGVtZW50LnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCB0cnVlKVxuICAgICAgdGhpcy5idXR0b25FbGVtZW50LmRpc2FibGVkID0gdHJ1ZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICB0aGlzLmJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLmluYWN0aXZlQnV0dG9uQ2xhc3MpXG4gICAgICAvLyB0aGlzLmJ1dHRvbkVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCdkaXNhYmxlZCcpXG4gICAgICB0aGlzLmJ1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBfc2V0RXZlbkxpc3RlbmVycygpIHtcbiAgICBjb25zdCBfdGhpcyA9IHRoaXM7XG4gICAgdGhpcy5pbnB1dExpc3QuZm9yRWFjaChpbnB1dEVsZW1lbnQgPT4ge1xuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KVxuICAgICAgICBfdGhpcy5fdG9nZ2xlQnRuU3RhdGUoKVxuICAgICAgfSlcbiAgICB9KVxuICAgIHRoaXMuZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGUpID0+IHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIC8vIGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgICAvLyBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIH0pXG4gIH1cblxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX3RvZ2dsZUJ0blN0YXRlKClcbiAgICB0aGlzLl9zZXRFdmVuTGlzdGVuZXJzKCk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXIgPSBjb250YWluZXJTZWxlY3RvcjtcbiAgfVxuXG4gIHJlbmRlckl0ZW1zKCkge1xuICAgIGlmICgodGhpcy5faXRlbXMpLmxlbmd0aCA+IDEpIHtcbiAgICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goaXRlbSA9PiB7IHRoaXMuX3JlbmRlcmVyKGl0ZW0pIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9yZW5kZXJlcih0aGlzLl9pdGVtcylcbiAgICB9XG4gIH1cblxuICBhZGRJbml0aWFsSXRlbShlbGVtZW50KSB7XG4gICAgdGhpcy5fY29udGFpbmVyLmFwcGVuZChlbGVtZW50KVxuICB9XG5cbiAgYWRkTmV3SXRlbShlbGVtZW50KSB7XG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudClcbiAgfVxuXG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XG4gIGNvbnN0cnVjdG9yKHByb2ZpbGVUaXRsZUVsZW1lbnQsIHByb2ZpbGVTdWJ0aXRsZUVsZW1lbnQsIHByb2ZpbGVBdmF0YXJFbGVtZW50KSB7XG4gICAgdGhpcy5uYW1lID0gcHJvZmlsZVRpdGxlRWxlbWVudDtcbiAgICB0aGlzLmpvYiA9IHByb2ZpbGVTdWJ0aXRsZUVsZW1lbnQ7XG4gICAgdGhpcy5hdmF0YXIgPSBwcm9maWxlQXZhdGFyRWxlbWVudDtcbiAgICB0aGlzLnVzZXJJZCA9ICcnO1xuICB9XG5cbiAgc2V0VXNlckluZm8odXNlckRhdGEpIHtcbiAgICB0aGlzLm5hbWUudGV4dENvbnRlbnQgPSB1c2VyRGF0YS5uYW1lO1xuICAgIHRoaXMuam9iLnRleHRDb250ZW50ID0gdXNlckRhdGEuYWJvdXQ7XG4gIH1cblxuICBzZXRQb3B1cElucHV0KGlucHV0TmFtZUVsZW1lbnQsIGlucHV0Sm9iRWxlbWVudCkge1xuICAgIGlucHV0TmFtZUVsZW1lbnQudmFsdWUgPSB0aGlzLm5hbWUudGV4dENvbnRlbnRcbiAgICBpbnB1dEpvYkVsZW1lbnQudmFsdWUgPSB0aGlzLmpvYi50ZXh0Q29udGVudFxuICB9XG5cbiAgc2V0QXZhdGFyKHVzZXJEYXRhKSB7XG4gICAgdGhpcy5hdmF0YXIuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gYHVybCgke3VzZXJEYXRhLmF2YXRhcn0pYFxuICB9XG5cbiAgc2V0VXNlcklkKHVzZXJEYXRhKSB7XG4gICAgdGhpcy51c2VySWQgPSB1c2VyRGF0YS5faWRcbiAgfVxuXG4gIGdldFVzZXJJZCgpIHtcbiAgICByZXR1cm4gdGhpcy51c2VySWQ7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBFbGVtZW50KSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gcG9wdXBFbGVtZW50O1xuICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlID0gdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLmNsb3NlID0gdGhpcy5jbG9zZS5iaW5kKHRoaXMpXG4gICAgdGhpcy5jbG9zZUJ0bkVsZW1lbnQgPSBwb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19idG5fdHlwZV9jbG9zZScpXG4gIH1cblxuICBzZXRFdmVudGxpc3RlbmVycygpIHtcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9jbG9zZU9uT3ZlcmxheSlcbiAgICB0aGlzLmNsb3NlQnRuRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuY2xvc2UpXG4gIH1cblxuICBvcGVuKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9vcGVuZWQnKVxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSlcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdwb3B1cF9vcGVuZWQnKVxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSlcbiAgfVxuXG4gIF9jbG9zZU9uT3ZlcmxheSA9IChldmVudCkgPT4ge1xuICAgIGlmIChldmVudC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdwb3B1cF9vcGVuZWQnKSkgdGhpcy5jbG9zZSgpXG4gIH07XG5cbiAgX2hhbmRsZUVzY0Nsb3NlKGV2ZW50KSB7XG4gICAgaWYgKGV2ZW50LmtleSA9PT0gXCJFc2NhcGVcIikgdGhpcy5jbG9zZSgpXG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tICcuL1BvcHVwLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBFbGVtZW50LCBoYW5kbGVGb3JtU3VibWl0Q2FsbGJhY2tGbikge1xuICAgIHN1cGVyKHBvcHVwRWxlbWVudClcbiAgICB0aGlzLnBvcHVwRWxlbWVudCA9IHBvcHVwRWxlbWVudDtcbiAgICB0aGlzLmhhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0Q2FsbGJhY2tGbi5iaW5kKHRoaXMpO1xuICB9XG5cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIGNvbnN0IHVzZXJJbmZvID0ge31cbiAgICBBcnJheS5mcm9tKHRoaXMucG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wb3B1cF9faW5wdXQnKSkuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgIHVzZXJJbmZvW2l0ZW0ubmFtZV0gPSBpdGVtLnZhbHVlXG4gICAgfSlcbiAgICByZXR1cm4gdXNlckluZm87XG4gIH1cblxuICBzZXRFdmVudGxpc3RlbmVycygpIHtcbiAgICBzdXBlci5zZXRFdmVudGxpc3RlbmVycygpXG4gICAgdGhpcy5wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcignZm9ybScpLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldmVudCkgPT4ge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxuICAgICAgdGhpcy5oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xuICAgIH0pXG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tICcuL1BvcHVwLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwRWxlbWVudCkge1xuICAgIHN1cGVyKHBvcHVwRWxlbWVudCk7XG4gICAgdGhpcy5wb3B1cEVsZW1lbnQgPSBwb3B1cEVsZW1lbnQ7XG4gICAgdGhpcy5wb3B1cEltZyA9IHBvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbWdcIik7XG4gICAgdGhpcy5wb3B1cEltZ0NhcHRpb24gPSBwb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW1nLWNhcHRpb25cIik7XG4gIH1cblxuICBvcGVuKGV2ZW50KSB7XG4gICAgc3VwZXIuc2V0RXZlbnRsaXN0ZW5lcnMoKVxuICAgIGNvbnN0IGNhcmRUZXh0ID0gYCR7KGV2ZW50LnRhcmdldC5wYXJlbnRFbGVtZW50KS5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RpdGxlXCIpLnRleHRDb250ZW50fWBcbiAgICB0aGlzLnBvcHVwSW1nLnNyYyA9ICcnIC8vcmVzZXQgaW1hZ2UgYmVmb3JlIG9wZW4gcG9wdXAuXG4gICAgdGhpcy5wb3B1cEltZy5zcmMgPSBldmVudC50YXJnZXQuc3JjXG4gICAgdGhpcy5wb3B1cEltZ0NhcHRpb24udGV4dENvbnRlbnQgPSBjYXJkVGV4dFxuICAgIHRoaXMucG9wdXBJbWcuYWx0ID0gY2FyZFRleHRcbiAgICBzdXBlci5vcGVuKClcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhEZWxldGUgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwRWxlbWVudCwgaGFuZGxlRGVsZXRlQ2FsbGJhY2tGbikge1xuICAgIHN1cGVyKHBvcHVwRWxlbWVudClcbiAgICB0aGlzLnBvcHVwRWxlbWVudCA9IHBvcHVwRWxlbWVudDtcbiAgICB0aGlzLmhhbmRsZURlbGV0ZSA9IGhhbmRsZURlbGV0ZUNhbGxiYWNrRm47XG4gICAgdGhpcy5jYXJkSWQgPSAnJztcbiAgfVxuXG4gIG9wZW4oY2FyZElkKSB7XG4gICAgc3VwZXIub3BlbigpO1xuICAgIHRoaXMuY2FyZElkID0gY2FyZElkO1xuICAgIHRoaXMuc2V0RXZlbnRsaXN0ZW5lcnMoKVxuICB9XG5cbiAgc2V0RXZlbnRsaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcignZm9ybScpLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldmVudCkgPT4ge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuaGFuZGxlRGVsZXRlKClcbiAgICB9KVxuICB9XG59XG4iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICBJbXBvcnQgY3NzIGZvciB3ZWJwYWNrIHRvIHJlYWQuXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuaW1wb3J0IFwiLi9pbmRleC5jc3NcIlxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICBJbXBvcnQgY29uc3QgYW5kIHV0aWxzLlxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuaW1wb3J0IHsgcHJvZmlsZVRpdGxlRWxlbWVudCwgcHJvZmlsZVN1YnRpdGxlRWxlbWVudCwgcG9wdXBGb3JtRWRpdEVsZW1lbnQsIHBvcHVwRm9ybUFkZEVsZW1lbnQsIGZvcm1FZGl0RWxlbWVudCwgZm9ybUFkZEVsZW1lbnQsIHBvcHVwVmlld0ltYWdlRWxlbWVudCwgZWRpdFByb2ZpbGVCdG5FbGVtZW50LCBhZGRDYXJkQnRuRWxlbWVudCwgY2FyZHNDb250YWluZXJFbGVtZW50LCBwb3B1cElucHV0VHlwZU5hbWUsIHBvcHVwSW5wdXRUeXBlSm9iLCBjYXJkVGVtcGxhdGUsIHBvcHVwRGVsZXRlQ2FyZEVsZW1lbnQsIHByb2ZpbGVBdmF0YXJFbGVtZW50LCBwb3B1cEZvcm1DaGFuZ2VBdmF0YXJFbGVtZW50LCBmb3JtQ2hhbmdlQXZhdGFyRWxlbWVudCB9IGZyb20gJy4uL3V0aWxzL2NvbnN0YW50cy5qcydcbmltcG9ydCB7IHZhbGlkYXRpb25Db25maWcgfSBmcm9tICcuLi91dGlscy92YWxpZGF0ZS1zZWxlY3Rvci5qcydcbmltcG9ydCB7IGxvYWRpbmdUZXh0IH0gZnJvbSAnLi4vdXRpbHMvbG9hZGluZy5qcydcblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgSW1wb3J0IE1ldGhvZCBDbGFzc2VzLlxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuaW1wb3J0IEFQSSBmcm9tICcuLi9jb21wb25lbnRzL0FwaS5qcyc7XG5pbXBvcnQgeyBDYXJkIH0gZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkLmpzJ1xuaW1wb3J0IHsgRm9ybVZhbGlkYXRvciB9IGZyb20gJy4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcydcbmltcG9ydCBTZWN0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvU2VjdGlvbi5qcydcbmltcG9ydCBVc2VySW5mbyBmcm9tICcuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzJ1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzJ1xuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMnXG5pbXBvcnQgUG9wdXBXaXRoRGVsZXRlIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRGVsZXRlLmpzJ1xuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICBTZXR0aW5nIEFQSSByZXF1ZXN0IHVybCBhbmQgaGVhZGVyLlxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuY29uc3QgYXBpID0gbmV3IEFQSShcbiAgXCJodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL1wiLCB7XG4gIG1ldGhvZDogXCJHRVRcIixcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246IFwiZTA5NjA0YTUtNTdhYS00YjIwLTlhODMtZWE2NmU1YzY5MjRiXCIsXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgfVxufSlcblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgTWFpbiBmdW5jdGlvbnMuXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG5jb25zdCBwb3B1cFdpdGhJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZShwb3B1cFZpZXdJbWFnZUVsZW1lbnQpO1xuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8ocHJvZmlsZVRpdGxlRWxlbWVudCwgcHJvZmlsZVN1YnRpdGxlRWxlbWVudCwgcHJvZmlsZUF2YXRhckVsZW1lbnQpXG5cbmNvbnN0IGhhbmRsZUNhcmRDbGlja0NhbGxiYWNrRm4gPSAoZXZlbnQpID0+IHtcbiAgcG9wdXBXaXRoSW1hZ2Uub3BlbihldmVudClcbn1cblxuY29uc3QgaGFuZGxlVHJhc2hDbGlja0NhbGxiYWNrRm4gPSAoY2FyZElkKSA9PiB7XG4gIHBvcHVwV2l0aERlbGV0ZS5vcGVuKGNhcmRJZClcbn1cblxuY29uc3QgY3JlYXRlQ2FyZCA9ICh7IG5hbWUsIGxpbmssIF9pZCwgbGlrZXMsIG93bmVyIH0pID0+IHtcbiAgY29uc3QgdXNlcklkID0gdXNlckluZm8uZ2V0VXNlcklkKClcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSBuZXcgQ2FyZCh7XG4gICAgbmFtZSwgbGluaywgX2lkLCBsaWtlcywgb3duZXIsIGhhbmRsZUNhcmRDbGlja0NhbGxiYWNrRm4sIGhhbmRsZVRyYXNoQ2xpY2tDYWxsYmFja0ZuLFxuICAgIGhhbmRsZUxpa2VDbGlja0NhbGxiYWNrRm46IChldmVudCkgPT4ge1xuICAgICAgY29uc3QgY2FyZElkID0gZXZlbnQudGFyZ2V0LmNsb3Nlc3QoXCIuY2FyZFwiKS5pZFxuICAgICAgIShldmVudC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiY2FyZF9fbGlrZV9hY3RpdmVcIikpXG4gICAgICAgID8gYXBpLmFkZExpa2UoY2FyZElkKVxuICAgICAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICAgIGNhcmRFbGVtZW50LmFkZExpa2VzKHJlcywgZXZlbnQpXG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBFcnJvcjogJHtlcnJ9YClcbiAgICAgICAgICB9KVxuICAgICAgICA6IGFwaS5yZW1vdmVMaWtlKGNhcmRJZClcbiAgICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgICBjYXJkRWxlbWVudC5yZW1vdmVMaWtlcyhyZXMsIGV2ZW50KVxuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgRXJyb3I6ICR7ZXJyfWApXG4gICAgICAgICAgfSlcbiAgICB9XG4gIH0sIHVzZXJJZCwgY2FyZFRlbXBsYXRlKVxuICByZXR1cm4gY2FyZEVsZW1lbnQuZ2VuZXJhdGVDYXJkKClcbn1cblxuY29uc3QgY3JlYXRlU2VjdGlvbiA9IChjYXJkRGF0YSwgcHJlcGVuZCA9IHRydWUpID0+IHtcbiAgY29uc3Qgc2VjdGlvbiA9IG5ldyBTZWN0aW9uKHtcbiAgICBpdGVtczogY2FyZERhdGEsXG4gICAgcmVuZGVyZXI6IChpdGVtKSA9PiB7XG4gICAgICBjb25zdCBjYXJkID0gY3JlYXRlQ2FyZChpdGVtKVxuICAgICAgcHJlcGVuZFxuICAgICAgICA/IHNlY3Rpb24uYWRkTmV3SXRlbShjYXJkKVxuICAgICAgICA6IHNlY3Rpb24uYWRkSW5pdGlhbEl0ZW0oY2FyZClcbiAgICB9XG4gIH0sIGNhcmRzQ29udGFpbmVyRWxlbWVudClcbiAgcmV0dXJuIHNlY3Rpb25cbn1cblxuY29uc3QgaGFuZGxlRm9ybUVkaXRTdWJtaXQgPSAobmV3VXNlckRhdGEpID0+IHtcbiAgbG9hZGluZ1RleHQocG9wdXBGb3JtRWRpdEVsZW1lbnQsIHRydWUpXG4gIGFwaS51cGRhdGVVc2VyKG5ld1VzZXJEYXRhKVxuICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHJlc3VsdClcbiAgICAgIHBvcHVwRWRpdFByb2ZpbGUuY2xvc2UoKVxuICAgIH0pXG4gICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhgRXJyb3I6ICR7ZXJyfWApXG4gICAgfSlcbiAgICAudGhlbigoKSA9PiB7XG4gICAgICBsb2FkaW5nVGV4dChwb3B1cEZvcm1FZGl0RWxlbWVudCwgZmFsc2UpXG4gICAgfSlcbn1cblxuY29uc3QgaGFuZGxlRm9ybUFkZFN1Ym1pdCA9IChuZXdVc2VyRGF0YSkgPT4ge1xuICBsb2FkaW5nVGV4dChwb3B1cEZvcm1BZGRFbGVtZW50LCB0cnVlKVxuICBhcGkuYWRkQ2FyZChuZXdVc2VyRGF0YSlcbiAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICBjcmVhdGVTZWN0aW9uKHJlcykucmVuZGVySXRlbXMoKVxuICAgICAgcG9wdXBBZGRDYXJkLmNsb3NlKClcbiAgICB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAgY29uc29sZS5sb2coYEVycm9yOiAke2Vycn1gKVxuICAgIH0pXG4gICAgLnRoZW4oKCkgPT4ge1xuICAgICAgbG9hZGluZ1RleHQocG9wdXBGb3JtQWRkRWxlbWVudCwgZmFsc2UpXG4gICAgfSlcbn1cblxuY29uc3QgaGFuZGxlQ2hhbmdlQXZhdGFyID0gKG5ld0F2YXRhck9iaikgPT4ge1xuICBsb2FkaW5nVGV4dChwb3B1cEZvcm1DaGFuZ2VBdmF0YXJFbGVtZW50LCB0cnVlKVxuICBhcGkuY2hhbmdlUHJvZmlsZVBpYyhuZXdBdmF0YXJPYmopXG4gICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgcHJvZmlsZUF2YXRhckVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gYHVybCgkeyhyZXN1bHQuYXZhdGFyKS50b1N0cmluZygpfSlgXG4gICAgICBwb3B1cENoYW5nZUF2YXRhci5jbG9zZSgpXG4gICAgfSlcbiAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGBFcnJvcjogJHtlcnJ9YClcbiAgICB9KVxuICAgIC50aGVuKCgpID0+IHtcbiAgICAgIGxvYWRpbmdUZXh0KHBvcHVwRm9ybUNoYW5nZUF2YXRhckVsZW1lbnQsIGZhbHNlKVxuICAgIH0pXG59XG5cbmNvbnN0IGhhbmRsZURlbGV0ZUNhbGxiYWNrRm4gPSAoKSA9PiB7XG4gIGNvbnN0IGNhcmRJZCA9IHBvcHVwV2l0aERlbGV0ZS5jYXJkSWQ7XG4gIGFwaS5kZWxldGVDYXJkKGNhcmRJZClcbiAgICAudGhlbigoKSA9PiB7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgJHtwb3B1cFdpdGhEZWxldGUuY2FyZElkfWApLnJlbW92ZSgpXG4gICAgICBwb3B1cFdpdGhEZWxldGUuY2xvc2UoKTtcbiAgICB9KVxuICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgY29uc29sZS5sb2coYEVycm9yOiAke2Vycn1gKVxuICAgIH0pXG59XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gIEZvcm0gVmFsaWRhdG9ycy5cbiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbmNvbnN0IGZvcm1FZGl0VmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvbkNvbmZpZywgcG9wdXBGb3JtRWRpdEVsZW1lbnQpO1xuY29uc3QgZm9ybUFkZFZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25Db25maWcsIHBvcHVwRm9ybUFkZEVsZW1lbnQpO1xuY29uc3QgZm9ybUNoYW5nZUF2YXRhciA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25Db25maWcsIHBvcHVwRm9ybUNoYW5nZUF2YXRhckVsZW1lbnQpO1xuZm9ybUVkaXRWYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuZm9ybUFkZFZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5mb3JtQ2hhbmdlQXZhdGFyLmVuYWJsZVZhbGlkYXRpb24oKTtcblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgU2V0IEV2ZW50TGlzdGVuZXJzIC0gUG9wdXAgV2l0aCBGb3JtcyArIGNvbmZpcm0gRGVsZXRldGlvbi5cbiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbmNvbnN0IHBvcHVwRWRpdFByb2ZpbGUgPSBuZXcgUG9wdXBXaXRoRm9ybShwb3B1cEZvcm1FZGl0RWxlbWVudCwgaGFuZGxlRm9ybUVkaXRTdWJtaXQpXG5jb25zdCBwb3B1cEFkZENhcmQgPSBuZXcgUG9wdXBXaXRoRm9ybShwb3B1cEZvcm1BZGRFbGVtZW50LCBoYW5kbGVGb3JtQWRkU3VibWl0KVxuY29uc3QgcG9wdXBDaGFuZ2VBdmF0YXIgPSBuZXcgUG9wdXBXaXRoRm9ybShwb3B1cEZvcm1DaGFuZ2VBdmF0YXJFbGVtZW50LCBoYW5kbGVDaGFuZ2VBdmF0YXIpXG5jb25zdCBwb3B1cFdpdGhEZWxldGUgPSBuZXcgUG9wdXBXaXRoRGVsZXRlKHBvcHVwRGVsZXRlQ2FyZEVsZW1lbnQsIGhhbmRsZURlbGV0ZUNhbGxiYWNrRm4pXG5wb3B1cEVkaXRQcm9maWxlLnNldEV2ZW50bGlzdGVuZXJzKClcbnBvcHVwQWRkQ2FyZC5zZXRFdmVudGxpc3RlbmVycygpXG5wb3B1cENoYW5nZUF2YXRhci5zZXRFdmVudGxpc3RlbmVycygpXG5wb3B1cFdpdGhEZWxldGUuc2V0RXZlbnRsaXN0ZW5lcnMoKVxuXG5lZGl0UHJvZmlsZUJ0bkVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIGZvcm1FZGl0VmFsaWRhdG9yLnJlc2V0RXJyb3JNZXNzYWdlKGZvcm1FZGl0RWxlbWVudClcbiAgdXNlckluZm8uc2V0UG9wdXBJbnB1dChwb3B1cElucHV0VHlwZU5hbWUsIHBvcHVwSW5wdXRUeXBlSm9iKVxuICBwb3B1cEVkaXRQcm9maWxlLm9wZW4oKVxufSk7XG5cbmFkZENhcmRCdG5FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICBmb3JtQWRkVmFsaWRhdG9yLnJlc2V0RXJyb3JNZXNzYWdlKGZvcm1BZGRFbGVtZW50KVxuICBwb3B1cEFkZENhcmQub3BlbigpO1xufSlcblxucHJvZmlsZUF2YXRhckVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIGZvcm1DaGFuZ2VBdmF0YXIucmVzZXRFcnJvck1lc3NhZ2UoZm9ybUNoYW5nZUF2YXRhckVsZW1lbnQpXG4gIHBvcHVwQ2hhbmdlQXZhdGFyLm9wZW4oKVxufSlcblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgSW5pdGlhbGl6ZSBjYXJkcyBhbmQgdXNlciBpbmZvLlxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuY29uc3QgaW5pdGlhbGl6ZUNhcmRzID0gKGNhcmREYXRhKSA9PiB7XG4gIGNyZWF0ZVNlY3Rpb24oY2FyZERhdGEsIGZhbHNlKS5yZW5kZXJJdGVtcygpXG59XG5cbmNvbnN0IGluaXRpYWxpemVVc2VyID0gKGRhdGEpID0+IHtcbiAgdXNlckluZm8uc2V0VXNlckluZm8oZGF0YSlcbiAgdXNlckluZm8uc2V0QXZhdGFyKGRhdGEpXG4gIHVzZXJJbmZvLnNldFVzZXJJZChkYXRhKVxufVxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICBTZXJ2ZXIgUmVxdWVzdCAtIGNhcmRzIGFuZCB1c2VyIGluZm8uXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG5Qcm9taXNlLmFsbChbXG4gIGFwaS5nZXRJbml0aWFsQ2FyZHMoKSxcbiAgYXBpLmdldFVzZXJEYXRhKClcbl0pXG4gIC50aGVuKGRhdGEgPT4ge1xuICAgIGluaXRpYWxpemVVc2VyKGRhdGFbMV0pXG4gICAgcmV0dXJuIGRhdGFcbiAgfSkuY2F0Y2goZXJyb3IgPT4ge1xuICAgIHJldHVybiAoYEVycm9yOiAke2Vycm9yfWApXG4gIH0pXG4gIC50aGVuKChkYXRhKSA9PiB7XG4gICAgaW5pdGlhbGl6ZUNhcmRzKGRhdGFbMF0pXG4gIH0pLmNhdGNoKGVycm9yID0+IHtcbiAgICByZXR1cm4gKGBFcnJvcjogJHtlcnJvcn1gKVxuICB9KVxuXG4iXSwic291cmNlUm9vdCI6IiJ9